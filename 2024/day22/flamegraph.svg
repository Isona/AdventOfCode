<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="7555"><g><title>`0x7FF9F6C7FBA0 (2 samples, 0.03%)</title><rect x="0.0000%" y="533" width="0.0265%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="543.50"></text></g><g><title>`0x7FF9F6BA4531 (1 samples, 0.01%)</title><rect x="0.0265%" y="453" width="0.0132%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.2765%" y="463.50"></text></g><g><title>`0x7FF9F6BA4D32 (1 samples, 0.01%)</title><rect x="0.0265%" y="437" width="0.0132%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2765%" y="447.50"></text></g><g><title>`0x7FF9F6C3FD17 (1 samples, 0.01%)</title><rect x="0.0265%" y="421" width="0.0132%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2765%" y="431.50"></text></g><g><title>`0x7FF9F6C3FEBD (1 samples, 0.01%)</title><rect x="0.0265%" y="405" width="0.0132%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2765%" y="415.50"></text></g><g><title>`0x7FF9F6C40293 (1 samples, 0.01%)</title><rect x="0.0265%" y="389" width="0.0132%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2765%" y="399.50"></text></g><g><title>`0x7FF9F6C4049F (1 samples, 0.01%)</title><rect x="0.0265%" y="373" width="0.0132%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2765%" y="383.50"></text></g><g><title>`0x7FF9F6C40942 (1 samples, 0.01%)</title><rect x="0.0265%" y="357" width="0.0132%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2765%" y="367.50"></text></g><g><title>`0x7FF9F6BC7776 (1 samples, 0.01%)</title><rect x="0.0265%" y="341" width="0.0132%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2765%" y="351.50"></text></g><g><title>`0x7FF9F6BC7AFE (1 samples, 0.01%)</title><rect x="0.0265%" y="325" width="0.0132%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.2765%" y="335.50"></text></g><g><title>`0x7FF9F6BAFBEF (1 samples, 0.01%)</title><rect x="0.0265%" y="309" width="0.0132%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.2765%" y="319.50"></text></g><g><title>`0x7FF9F6BA428A (2 samples, 0.03%)</title><rect x="0.0265%" y="469" width="0.0265%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="2"/><text x="0.2765%" y="479.50"></text></g><g><title>`0x7FF9F6BA465C (1 samples, 0.01%)</title><rect x="0.0397%" y="453" width="0.0132%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.2897%" y="463.50"></text></g><g><title>`0x7FF9F6BA5947 (1 samples, 0.01%)</title><rect x="0.0397%" y="437" width="0.0132%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.2897%" y="447.50"></text></g><g><title>`0x7FF9F6CFFD84 (1 samples, 0.01%)</title><rect x="0.0397%" y="421" width="0.0132%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.2897%" y="431.50"></text></g><g><title>`0x7FF9F6BF2201 (3 samples, 0.04%)</title><rect x="0.0265%" y="501" width="0.0397%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="3"/><text x="0.2765%" y="511.50"></text></g><g><title>`0x7FF9F6BF0857 (3 samples, 0.04%)</title><rect x="0.0265%" y="485" width="0.0397%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="3"/><text x="0.2765%" y="495.50"></text></g><g><title>`0x7FF9F6BA4351 (1 samples, 0.01%)</title><rect x="0.0529%" y="469" width="0.0132%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="0.3029%" y="479.50"></text></g><g><title>`0x7FF9F6BF4583 (1 samples, 0.01%)</title><rect x="0.0529%" y="453" width="0.0132%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="0.3029%" y="463.50"></text></g><g><title>`0x7FF9F6BA48DF (1 samples, 0.01%)</title><rect x="0.0662%" y="341" width="0.0132%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.3162%" y="351.50"></text></g><g><title>`0x7FF9F6BA5160 (1 samples, 0.01%)</title><rect x="0.0662%" y="325" width="0.0132%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.3162%" y="335.50"></text></g><g><title>`0x7FF9F6BA5493 (1 samples, 0.01%)</title><rect x="0.0662%" y="309" width="0.0132%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.3162%" y="319.50"></text></g><g><title>`0x7FF9F6CFFEC4 (1 samples, 0.01%)</title><rect x="0.0662%" y="293" width="0.0132%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="0.3162%" y="303.50"></text></g><g><title>`0x7FF9F6BA884E (1 samples, 0.01%)</title><rect x="0.0794%" y="309" width="0.0132%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.3294%" y="319.50"></text></g><g><title>`0x7FF9F6BA8D1A (1 samples, 0.01%)</title><rect x="0.0794%" y="293" width="0.0132%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.3294%" y="303.50"></text></g><g><title>`0x7FF9F6CFFC24 (1 samples, 0.01%)</title><rect x="0.0794%" y="277" width="0.0132%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.3294%" y="287.50"></text></g><g><title>`0x7FF9F6BEB050 (3 samples, 0.04%)</title><rect x="0.0662%" y="373" width="0.0397%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="3"/><text x="0.3162%" y="383.50"></text></g><g><title>`0x7FF9F6BA4364 (3 samples, 0.04%)</title><rect x="0.0662%" y="357" width="0.0397%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="3"/><text x="0.3162%" y="367.50"></text></g><g><title>`0x7FF9F6BA494D (2 samples, 0.03%)</title><rect x="0.0794%" y="341" width="0.0265%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="2"/><text x="0.3294%" y="351.50"></text></g><g><title>`0x7FF9F6BA5A9C (2 samples, 0.03%)</title><rect x="0.0794%" y="325" width="0.0265%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="2"/><text x="0.3294%" y="335.50"></text></g><g><title>`0x7FF9F6BA8999 (1 samples, 0.01%)</title><rect x="0.0927%" y="309" width="0.0132%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.3427%" y="319.50"></text></g><g><title>`0x7FF9F6BEC5FE (1 samples, 0.01%)</title><rect x="0.0927%" y="293" width="0.0132%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.3427%" y="303.50"></text></g><g><title>`0x7FF9F6BEE3BC (1 samples, 0.01%)</title><rect x="0.0927%" y="277" width="0.0132%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.3427%" y="287.50"></text></g><g><title>`0x7FF9F6BA70E1 (1 samples, 0.01%)</title><rect x="0.0927%" y="261" width="0.0132%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.3427%" y="271.50"></text></g><g><title>`0x7FF9F6BA892C (1 samples, 0.01%)</title><rect x="0.0927%" y="245" width="0.0132%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.3427%" y="255.50"></text></g><g><title>`0x7FF9F6BA9437 (1 samples, 0.01%)</title><rect x="0.0927%" y="229" width="0.0132%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="0.3427%" y="239.50"></text></g><g><title>`0x7FF9F6BABE1B (1 samples, 0.01%)</title><rect x="0.0927%" y="213" width="0.0132%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="0.3427%" y="223.50"></text></g><g><title>`0x7FF9F6BEB05A (1 samples, 0.01%)</title><rect x="0.1059%" y="373" width="0.0132%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="0.3559%" y="383.50"></text></g><g><title>`0x7FF9F6BA41E9 (1 samples, 0.01%)</title><rect x="0.1059%" y="357" width="0.0132%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="0.3559%" y="367.50"></text></g><g><title>`0x7FF9F6CFF7A4 (1 samples, 0.01%)</title><rect x="0.1059%" y="341" width="0.0132%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="0.3559%" y="351.50"></text></g><g><title>`0x7FF9F40B04F6 (5 samples, 0.07%)</title><rect x="0.0662%" y="485" width="0.0662%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="5"/><text x="0.3162%" y="495.50"></text></g><g><title>`0x7FF9F409586D (5 samples, 0.07%)</title><rect x="0.0662%" y="469" width="0.0662%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="5"/><text x="0.3162%" y="479.50"></text></g><g><title>`0x7FF9F403710B (5 samples, 0.07%)</title><rect x="0.0662%" y="453" width="0.0662%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="5"/><text x="0.3162%" y="463.50"></text></g><g><title>`0x7FF9F4087BF9 (5 samples, 0.07%)</title><rect x="0.0662%" y="437" width="0.0662%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="5"/><text x="0.3162%" y="447.50"></text></g><g><title>`0x7FF9F4521D46 (5 samples, 0.07%)</title><rect x="0.0662%" y="421" width="0.0662%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="5"/><text x="0.3162%" y="431.50"></text></g><g><title>`0x7FF9F6BF66A0 (5 samples, 0.07%)</title><rect x="0.0662%" y="405" width="0.0662%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="5"/><text x="0.3162%" y="415.50"></text></g><g><title>`0x7FF9F6BEACD0 (5 samples, 0.07%)</title><rect x="0.0662%" y="389" width="0.0662%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="5"/><text x="0.3162%" y="399.50"></text></g><g><title>`0x7FF9F6BEB0C4 (1 samples, 0.01%)</title><rect x="0.1191%" y="373" width="0.0132%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="0.3691%" y="383.50"></text></g><g><title>`0x7FF9F6C4AD83 (1 samples, 0.01%)</title><rect x="0.1191%" y="357" width="0.0132%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="0.3691%" y="367.50"></text></g><g><title>`0x7FF9F6C4B0C6 (1 samples, 0.01%)</title><rect x="0.1191%" y="341" width="0.0132%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="0.3691%" y="351.50"></text></g><g><title>`0x7FF9F6C4B09A (1 samples, 0.01%)</title><rect x="0.1191%" y="325" width="0.0132%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="0.3691%" y="335.50"></text></g><g><title>`0x7FF9F6BBCC0C (1 samples, 0.01%)</title><rect x="0.1191%" y="309" width="0.0132%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="0.3691%" y="319.50"></text></g><g><title>`0x7FF9F6BBD860 (1 samples, 0.01%)</title><rect x="0.1191%" y="293" width="0.0132%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="0.3691%" y="303.50"></text></g><g><title>`0x7FF9F68D7ABF (1 samples, 0.01%)</title><rect x="0.1191%" y="277" width="0.0132%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="0.3691%" y="287.50"></text></g><g><title>`0x7FF9F68F4772 (1 samples, 0.01%)</title><rect x="0.1191%" y="261" width="0.0132%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="0.3691%" y="271.50"></text></g><g><title>`0x7FF9F68F4964 (1 samples, 0.01%)</title><rect x="0.1191%" y="245" width="0.0132%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="0.3691%" y="255.50"></text></g><g><title>`0x7FF9F68F4D3E (1 samples, 0.01%)</title><rect x="0.1191%" y="229" width="0.0132%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="0.3691%" y="239.50"></text></g><g><title>`0x7FF9F68F46AC (1 samples, 0.01%)</title><rect x="0.1191%" y="213" width="0.0132%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="0.3691%" y="223.50"></text></g><g><title>`0x7FF9F68FE5BF (1 samples, 0.01%)</title><rect x="0.1191%" y="197" width="0.0132%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="0.3691%" y="207.50"></text></g><g><title>`0x7FF9F68FE4D9 (1 samples, 0.01%)</title><rect x="0.1191%" y="181" width="0.0132%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="0.3691%" y="191.50"></text></g><g><title>`0x7FF9F4518C46 (1 samples, 0.01%)</title><rect x="0.1191%" y="165" width="0.0132%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="0.3691%" y="175.50"></text></g><g><title>`0x7FF9F4518F47 (1 samples, 0.01%)</title><rect x="0.1191%" y="149" width="0.0132%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="0.3691%" y="159.50"></text></g><g><title>`0x7FF9F40B0543 (1 samples, 0.01%)</title><rect x="0.1324%" y="485" width="0.0132%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="0.3824%" y="495.50"></text></g><g><title>`0x7FF9F5A618AB (1 samples, 0.01%)</title><rect x="0.1324%" y="469" width="0.0132%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="0.3824%" y="479.50"></text></g><g><title>`0x7FF9F6C7FD84 (1 samples, 0.01%)</title><rect x="0.1324%" y="453" width="0.0132%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="0.3824%" y="463.50"></text></g><g><title>`0x7FF9F6C80BC0 (1 samples, 0.01%)</title><rect x="0.1324%" y="437" width="0.0132%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="0.3824%" y="447.50"></text></g><g><title>`0x7FF9F6BBD860 (1 samples, 0.01%)</title><rect x="0.1324%" y="421" width="0.0132%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="0.3824%" y="431.50"></text></g><g><title>`0x7FF9F4636E49 (1 samples, 0.01%)</title><rect x="0.1324%" y="405" width="0.0132%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="0.3824%" y="415.50"></text></g><g><title>`0x7FF9F4620B38 (1 samples, 0.01%)</title><rect x="0.1324%" y="389" width="0.0132%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="0.3824%" y="399.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.1456%" y="309" width="0.0132%" height="15" fill="rgb(230,62,27)" fg:x="11" fg:w="1"/><text x="0.3956%" y="319.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.1456%" y="293" width="0.0132%" height="15" fill="rgb(216,154,8)" fg:x="11" fg:w="1"/><text x="0.3956%" y="303.50"></text></g><g><title>day22.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.1456%" y="277" width="0.0132%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="1"/><text x="0.3956%" y="287.50"></text></g><g><title>day22.exe`std::io::stdio::_print (1 samples, 0.01%)</title><rect x="0.1456%" y="261" width="0.0132%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="1"/><text x="0.3956%" y="271.50"></text></g><g><title>day22.exe`std::io::stdio::print_to (1 samples, 0.01%)</title><rect x="0.1456%" y="245" width="0.0132%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="1"/><text x="0.3956%" y="255.50"></text></g><g><title>day22.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.01%)</title><rect x="0.1456%" y="229" width="0.0132%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="0.3956%" y="239.50"></text></g><g><title>day22.exe`std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="0.1456%" y="213" width="0.0132%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="0.3956%" y="223.50"></text></g><g><title>day22.exe`core::fmt::write (1 samples, 0.01%)</title><rect x="0.1456%" y="197" width="0.0132%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="0.3956%" y="207.50"></text></g><g><title>day22.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.01%)</title><rect x="0.1456%" y="181" width="0.0132%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="0.3956%" y="191.50"></text></g><g><title>day22.exe`std::io::stdio::impl$19::write_all (1 samples, 0.01%)</title><rect x="0.1456%" y="165" width="0.0132%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="0.3956%" y="175.50"></text></g><g><title>day22.exe`std::sync::reentrant_lock::impl$11::deref (1 samples, 0.01%)</title><rect x="0.1456%" y="149" width="0.0132%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="0.3956%" y="159.50"></text></g><g><title>day22.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.01%)</title><rect x="0.1456%" y="133" width="0.0132%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="0.3956%" y="143.50"></text></g><g><title>day22.exe`std::io::buffered::bufwriter::impl$6::write_all (1 samples, 0.01%)</title><rect x="0.1456%" y="117" width="0.0132%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="0.3956%" y="127.50"></text></g><g><title>day22.exe`std::io::buffered::bufwriter::BufWriter::write_to_buffer_unchecked (1 samples, 0.01%)</title><rect x="0.1456%" y="101" width="0.0132%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="0.3956%" y="111.50"></text></g><g><title>day22.exe`memcpy (1 samples, 0.01%)</title><rect x="0.1456%" y="85" width="0.0132%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="0.3956%" y="95.50"></text></g><g><title>day22.exe`core::iter::range::impl$6::next(core::ops::range::Range (9 samples, 0.12%)</title><rect x="0.1588%" y="293" width="0.1191%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="9"/><text x="0.4088%" y="303.50"></text></g><g><title>day22.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (9 samples, 0.12%)</title><rect x="0.1588%" y="277" width="0.1191%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="9"/><text x="0.4088%" y="287.50"></text></g><g><title>day22.exe`core::cmp::impls::impl$76::lt (9 samples, 0.12%)</title><rect x="0.1588%" y="261" width="0.1191%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="9"/><text x="0.4088%" y="271.50"></text></g><g><title>day22.exe`core::ops::bit::impl$359::shl (14 samples, 0.19%)</title><rect x="0.4633%" y="277" width="0.1853%" height="15" fill="rgb(240,68,47)" fg:x="35" fg:w="14"/><text x="0.7133%" y="287.50"></text></g><g><title>day22.exe`day22::part_1(ref$&lt;slice2$ (60 samples, 0.79%)</title><rect x="0.1588%" y="309" width="0.7942%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="60"/><text x="0.4088%" y="319.50"></text></g><g><title>day22.exe`day22::get_next_secret (51 samples, 0.68%)</title><rect x="0.2780%" y="293" width="0.6750%" height="15" fill="rgb(235,124,12)" fg:x="21" fg:w="51"/><text x="0.5280%" y="303.50"></text></g><g><title>day22.exe`core::ops::bit::impl$935::shr (23 samples, 0.30%)</title><rect x="0.6486%" y="277" width="0.3044%" height="15" fill="rgb(224,169,11)" fg:x="49" fg:w="23"/><text x="0.8986%" y="287.50"></text></g><g><title>`0x7FF9F6BD5DAA (1 samples, 0.01%)</title><rect x="1.1913%" y="117" width="0.0132%" height="15" fill="rgb(250,166,2)" fg:x="90" fg:w="1"/><text x="1.4413%" y="127.50"></text></g><g><title>`0x7FF9F6BC7776 (1 samples, 0.01%)</title><rect x="1.1913%" y="101" width="0.0132%" height="15" fill="rgb(242,216,29)" fg:x="90" fg:w="1"/><text x="1.4413%" y="111.50"></text></g><g><title>`0x7FF9F6BC7AFE (1 samples, 0.01%)</title><rect x="1.1913%" y="85" width="0.0132%" height="15" fill="rgb(230,116,27)" fg:x="90" fg:w="1"/><text x="1.4413%" y="95.50"></text></g><g><title>`0x7FF9F6BAF69B (1 samples, 0.01%)</title><rect x="1.1913%" y="69" width="0.0132%" height="15" fill="rgb(228,99,48)" fg:x="90" fg:w="1"/><text x="1.4413%" y="79.50"></text></g><g><title>`0x7FF9F6BCBB97 (1 samples, 0.01%)</title><rect x="1.1913%" y="53" width="0.0132%" height="15" fill="rgb(253,11,6)" fg:x="90" fg:w="1"/><text x="1.4413%" y="63.50"></text></g><g><title>`0x7FF9F6D04FA2 (1 samples, 0.01%)</title><rect x="1.2045%" y="101" width="0.0132%" height="15" fill="rgb(247,143,39)" fg:x="91" fg:w="1"/><text x="1.4545%" y="111.50"></text></g><g><title>`0x7FF9F6BD5DF9 (2 samples, 0.03%)</title><rect x="1.2045%" y="117" width="0.0265%" height="15" fill="rgb(236,97,10)" fg:x="91" fg:w="2"/><text x="1.4545%" y="127.50"></text></g><g><title>`0x7FF9F6D04FA6 (1 samples, 0.01%)</title><rect x="1.2177%" y="101" width="0.0132%" height="15" fill="rgb(233,208,19)" fg:x="92" fg:w="1"/><text x="1.4677%" y="111.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVec&lt;i32,alloc::alloc::Global&gt;::grow_one&lt;i32,alloc::alloc::Global&gt; (4 samples, 0.05%)</title><rect x="1.1913%" y="277" width="0.0529%" height="15" fill="rgb(216,164,2)" fg:x="90" fg:w="4"/><text x="1.4413%" y="287.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.05%)</title><rect x="1.1913%" y="261" width="0.0529%" height="15" fill="rgb(220,129,5)" fg:x="90" fg:w="4"/><text x="1.4413%" y="271.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="1.1913%" y="245" width="0.0529%" height="15" fill="rgb(242,17,10)" fg:x="90" fg:w="4"/><text x="1.4413%" y="255.50"></text></g><g><title>day22.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.05%)</title><rect x="1.1913%" y="229" width="0.0529%" height="15" fill="rgb(242,107,0)" fg:x="90" fg:w="4"/><text x="1.4413%" y="239.50"></text></g><g><title>day22.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.05%)</title><rect x="1.1913%" y="213" width="0.0529%" height="15" fill="rgb(251,28,31)" fg:x="90" fg:w="4"/><text x="1.4413%" y="223.50"></text></g><g><title>day22.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.05%)</title><rect x="1.1913%" y="197" width="0.0529%" height="15" fill="rgb(233,223,10)" fg:x="90" fg:w="4"/><text x="1.4413%" y="207.50"></text></g><g><title>day22.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.05%)</title><rect x="1.1913%" y="181" width="0.0529%" height="15" fill="rgb(215,21,27)" fg:x="90" fg:w="4"/><text x="1.4413%" y="191.50"></text></g><g><title>day22.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.05%)</title><rect x="1.1913%" y="165" width="0.0529%" height="15" fill="rgb(232,23,21)" fg:x="90" fg:w="4"/><text x="1.4413%" y="175.50"></text></g><g><title>`0x7FF9F6BD5376 (4 samples, 0.05%)</title><rect x="1.1913%" y="149" width="0.0529%" height="15" fill="rgb(244,5,23)" fg:x="90" fg:w="4"/><text x="1.4413%" y="159.50"></text></g><g><title>`0x7FF9F6BD54B5 (4 samples, 0.05%)</title><rect x="1.1913%" y="133" width="0.0529%" height="15" fill="rgb(226,81,46)" fg:x="90" fg:w="4"/><text x="1.4413%" y="143.50"></text></g><g><title>`0x7FF9F6BD5E0B (1 samples, 0.01%)</title><rect x="1.2310%" y="117" width="0.0132%" height="15" fill="rgb(247,70,30)" fg:x="93" fg:w="1"/><text x="1.4810%" y="127.50"></text></g><g><title>`0x7FF9F6BD2220 (1 samples, 0.01%)</title><rect x="1.2310%" y="101" width="0.0132%" height="15" fill="rgb(212,68,19)" fg:x="93" fg:w="1"/><text x="1.4810%" y="111.50"></text></g><g><title>day22.exe`alloc::vec::Vec&lt;i32,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="1.2442%" y="277" width="0.0132%" height="15" fill="rgb(240,187,13)" fg:x="94" fg:w="1"/><text x="1.4942%" y="287.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVec&lt;i32,alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="1.2442%" y="261" width="0.0132%" height="15" fill="rgb(223,113,26)" fg:x="94" fg:w="1"/><text x="1.4942%" y="271.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="1.2442%" y="245" width="0.0132%" height="15" fill="rgb(206,192,2)" fg:x="94" fg:w="1"/><text x="1.4942%" y="255.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.01%)</title><rect x="1.2442%" y="229" width="0.0132%" height="15" fill="rgb(241,108,4)" fg:x="94" fg:w="1"/><text x="1.4942%" y="239.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVec&lt;i32,alloc::alloc::Global&gt;::grow_one&lt;i32,alloc::alloc::Global&gt; (1 samples, 0.01%)</title><rect x="1.2442%" y="213" width="0.0132%" height="15" fill="rgb(247,173,49)" fg:x="94" fg:w="1"/><text x="1.4942%" y="223.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.01%)</title><rect x="1.2442%" y="197" width="0.0132%" height="15" fill="rgb(224,114,35)" fg:x="94" fg:w="1"/><text x="1.4942%" y="207.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="1.2442%" y="181" width="0.0132%" height="15" fill="rgb(245,159,27)" fg:x="94" fg:w="1"/><text x="1.4942%" y="191.50"></text></g><g><title>day22.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.01%)</title><rect x="1.2442%" y="165" width="0.0132%" height="15" fill="rgb(245,172,44)" fg:x="94" fg:w="1"/><text x="1.4942%" y="175.50"></text></g><g><title>day22.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="1.2442%" y="149" width="0.0132%" height="15" fill="rgb(236,23,11)" fg:x="94" fg:w="1"/><text x="1.4942%" y="159.50"></text></g><g><title>day22.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="1.2442%" y="133" width="0.0132%" height="15" fill="rgb(205,117,38)" fg:x="94" fg:w="1"/><text x="1.4942%" y="143.50"></text></g><g><title>day22.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="1.2442%" y="117" width="0.0132%" height="15" fill="rgb(237,72,25)" fg:x="94" fg:w="1"/><text x="1.4942%" y="127.50"></text></g><g><title>day22.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="1.2442%" y="101" width="0.0132%" height="15" fill="rgb(244,70,9)" fg:x="94" fg:w="1"/><text x="1.4942%" y="111.50"></text></g><g><title>`0x7FF9F6BD5376 (1 samples, 0.01%)</title><rect x="1.2442%" y="85" width="0.0132%" height="15" fill="rgb(217,125,39)" fg:x="94" fg:w="1"/><text x="1.4942%" y="95.50"></text></g><g><title>`0x7FF9F6BD54FB (1 samples, 0.01%)</title><rect x="1.2442%" y="69" width="0.0132%" height="15" fill="rgb(235,36,10)" fg:x="94" fg:w="1"/><text x="1.4942%" y="79.50"></text></g><g><title>day22.exe`alloc::vec::Vec&lt;i32,alloc::alloc::Global&gt;::push (26 samples, 0.34%)</title><rect x="0.9662%" y="293" width="0.3441%" height="15" fill="rgb(251,123,47)" fg:x="73" fg:w="26"/><text x="1.2162%" y="303.50"></text></g><g><title>day22.exe`core::ptr::write (4 samples, 0.05%)</title><rect x="1.2574%" y="277" width="0.0529%" height="15" fill="rgb(221,13,13)" fg:x="95" fg:w="4"/><text x="1.5074%" y="287.50"></text></g><g><title>day22.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (23 samples, 0.30%)</title><rect x="1.3104%" y="293" width="0.3044%" height="15" fill="rgb(238,131,9)" fg:x="99" fg:w="23"/><text x="1.5604%" y="303.50"></text></g><g><title>day22.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter (2 samples, 0.03%)</title><rect x="1.6148%" y="293" width="0.0265%" height="15" fill="rgb(211,50,8)" fg:x="122" fg:w="2"/><text x="1.8648%" y="303.50"></text></g><g><title>day22.exe`core::ptr::non_null::NonNull&lt;i32&gt;::add(core::ptr::non_null::NonNull (2 samples, 0.03%)</title><rect x="1.6148%" y="277" width="0.0265%" height="15" fill="rgb(245,182,24)" fg:x="122" fg:w="2"/><text x="1.8648%" y="287.50"></text></g><g><title>day22.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Windows (5 samples, 0.07%)</title><rect x="1.6810%" y="277" width="0.0662%" height="15" fill="rgb(242,14,37)" fg:x="127" fg:w="5"/><text x="1.9310%" y="287.50"></text></g><g><title>day22.exe`core::slice::iter::impl$62::next(core::slice::iter::Windows (5 samples, 0.07%)</title><rect x="1.6810%" y="261" width="0.0662%" height="15" fill="rgb(246,228,12)" fg:x="127" fg:w="5"/><text x="1.9310%" y="271.50"></text></g><g><title>day22.exe`alloc::vec::Vec&lt;i32,alloc::alloc::Global&gt;::as_slice (1 samples, 0.01%)</title><rect x="1.7604%" y="197" width="0.0132%" height="15" fill="rgb(213,55,15)" fg:x="133" fg:w="1"/><text x="2.0104%" y="207.50"></text></g><g><title>day22.exe`alloc::vec::impl$13::index(alloc::vec::Vec (2 samples, 0.03%)</title><rect x="1.7604%" y="229" width="0.0265%" height="15" fill="rgb(209,9,3)" fg:x="133" fg:w="2"/><text x="2.0104%" y="239.50"></text></g><g><title>day22.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.03%)</title><rect x="1.7604%" y="213" width="0.0265%" height="15" fill="rgb(230,59,30)" fg:x="133" fg:w="2"/><text x="2.0104%" y="223.50"></text></g><g><title>day22.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1 samples, 0.01%)</title><rect x="1.7737%" y="197" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="134" fg:w="1"/><text x="2.0237%" y="207.50"></text></g><g><title>day22.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Windows (26 samples, 0.34%)</title><rect x="1.6413%" y="293" width="0.3441%" height="15" fill="rgb(220,109,13)" fg:x="124" fg:w="26"/><text x="1.8913%" y="303.50"></text></g><g><title>day22.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;usize,ref$&lt;slice2$&lt;i32&gt; &gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;tuple$&lt;usize,ref$&lt;slice2$ (18 samples, 0.24%)</title><rect x="1.7472%" y="277" width="0.2383%" height="15" fill="rgb(232,18,1)" fg:x="132" fg:w="18"/><text x="1.9972%" y="287.50"></text></g><g><title>day22.exe`core::ops::function::impls::impl$4::call_once(day22::part_2::closure_env$0*, tuple$&lt;usize,ref$&lt;slice2$ (18 samples, 0.24%)</title><rect x="1.7472%" y="261" width="0.2383%" height="15" fill="rgb(215,41,42)" fg:x="132" fg:w="18"/><text x="1.9972%" y="271.50"></text></g><g><title>day22.exe`day22::part_2::closure$0(day22::part_2::closure_env$0*, tuple$&lt;usize,ref$&lt;slice2$ (18 samples, 0.24%)</title><rect x="1.7472%" y="245" width="0.2383%" height="15" fill="rgb(224,123,36)" fg:x="132" fg:w="18"/><text x="1.9972%" y="255.50"></text></g><g><title>day22.exe`day22::banana_hash(ref$&lt;slice2$ (15 samples, 0.20%)</title><rect x="1.7869%" y="229" width="0.1985%" height="15" fill="rgb(240,125,3)" fg:x="135" fg:w="15"/><text x="2.0369%" y="239.50"></text></g><g><title>day22.exe`core::ops::arith::impl$108::sub (5 samples, 0.07%)</title><rect x="1.9193%" y="213" width="0.0662%" height="15" fill="rgb(205,98,50)" fg:x="145" fg:w="5"/><text x="2.1693%" y="223.50"></text></g><g><title>day22.exe`core::ops::arith::impl$365::add_assign (1,339 samples, 17.72%)</title><rect x="1.9854%" y="293" width="17.7234%" height="15" fill="rgb(205,185,37)" fg:x="150" fg:w="1339"/><text x="2.2354%" y="303.50">day22.exe`core::ops::arith::..</text></g><g><title>day22.exe`core::ops::arith::impl$349::add_assign (1,339 samples, 17.72%)</title><rect x="1.9854%" y="277" width="17.7234%" height="15" fill="rgb(238,207,15)" fg:x="150" fg:w="1339"/><text x="2.2354%" y="287.50">day22.exe`core::ops::arith::..</text></g><g><title>`0x7FF9F6BD2435 (1 samples, 0.01%)</title><rect x="19.7088%" y="245" width="0.0132%" height="15" fill="rgb(213,199,42)" fg:x="1489" fg:w="1"/><text x="19.9588%" y="255.50"></text></g><g><title>`0x7FF9F6BCA83A (1 samples, 0.01%)</title><rect x="19.7220%" y="181" width="0.0132%" height="15" fill="rgb(235,201,11)" fg:x="1490" fg:w="1"/><text x="19.9720%" y="191.50"></text></g><g><title>`0x7FF9F6C5D58A (1 samples, 0.01%)</title><rect x="19.7220%" y="165" width="0.0132%" height="15" fill="rgb(207,46,11)" fg:x="1490" fg:w="1"/><text x="19.9720%" y="175.50"></text></g><g><title>`0x7FF9F6BCDEEE (1 samples, 0.01%)</title><rect x="19.7220%" y="149" width="0.0132%" height="15" fill="rgb(241,35,35)" fg:x="1490" fg:w="1"/><text x="19.9720%" y="159.50"></text></g><g><title>`0x7FF9F6C8A940 (1 samples, 0.01%)</title><rect x="19.7220%" y="133" width="0.0132%" height="15" fill="rgb(243,32,47)" fg:x="1490" fg:w="1"/><text x="19.9720%" y="143.50"></text></g><g><title>`0x7FF9F6C006D0 (1 samples, 0.01%)</title><rect x="19.7220%" y="117" width="0.0132%" height="15" fill="rgb(247,202,23)" fg:x="1490" fg:w="1"/><text x="19.9720%" y="127.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.04%)</title><rect x="19.7088%" y="293" width="0.0397%" height="15" fill="rgb(219,102,11)" fg:x="1489" fg:w="3"/><text x="19.9588%" y="303.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.04%)</title><rect x="19.7088%" y="277" width="0.0397%" height="15" fill="rgb(243,110,44)" fg:x="1489" fg:w="3"/><text x="19.9588%" y="287.50"></text></g><g><title>day22.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (3 samples, 0.04%)</title><rect x="19.7088%" y="261" width="0.0397%" height="15" fill="rgb(222,74,54)" fg:x="1489" fg:w="3"/><text x="19.9588%" y="271.50"></text></g><g><title>day22.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (2 samples, 0.03%)</title><rect x="19.7220%" y="245" width="0.0265%" height="15" fill="rgb(216,99,12)" fg:x="1490" fg:w="2"/><text x="19.9720%" y="255.50"></text></g><g><title>day22.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.03%)</title><rect x="19.7220%" y="229" width="0.0265%" height="15" fill="rgb(226,22,26)" fg:x="1490" fg:w="2"/><text x="19.9720%" y="239.50"></text></g><g><title>day22.exe`alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="19.7220%" y="213" width="0.0265%" height="15" fill="rgb(217,163,10)" fg:x="1490" fg:w="2"/><text x="19.9720%" y="223.50"></text></g><g><title>`0x7FF9F6BD2871 (2 samples, 0.03%)</title><rect x="19.7220%" y="197" width="0.0265%" height="15" fill="rgb(213,25,53)" fg:x="1490" fg:w="2"/><text x="19.9720%" y="207.50"></text></g><g><title>`0x7FF9F6BCAC3D (1 samples, 0.01%)</title><rect x="19.7353%" y="181" width="0.0132%" height="15" fill="rgb(252,105,26)" fg:x="1491" fg:w="1"/><text x="19.9853%" y="191.50"></text></g><g><title>`0x7FF9F6BCA5A3 (2 samples, 0.03%)</title><rect x="19.7485%" y="101" width="0.0265%" height="15" fill="rgb(220,39,43)" fg:x="1492" fg:w="2"/><text x="19.9985%" y="111.50"></text></g><g><title>`0x7FF9F6BCA835 (1 samples, 0.01%)</title><rect x="19.7750%" y="101" width="0.0132%" height="15" fill="rgb(229,68,48)" fg:x="1494" fg:w="1"/><text x="20.0250%" y="111.50"></text></g><g><title>`0x7FF9F6C5D58A (22 samples, 0.29%)</title><rect x="19.7882%" y="85" width="0.2912%" height="15" fill="rgb(252,8,32)" fg:x="1495" fg:w="22"/><text x="20.0382%" y="95.50"></text></g><g><title>`0x7FF9F6BCDEEE (22 samples, 0.29%)</title><rect x="19.7882%" y="69" width="0.2912%" height="15" fill="rgb(223,20,43)" fg:x="1495" fg:w="22"/><text x="20.0382%" y="79.50"></text></g><g><title>`0x7FF9F6C8A8F9 (22 samples, 0.29%)</title><rect x="19.7882%" y="53" width="0.2912%" height="15" fill="rgb(229,81,49)" fg:x="1495" fg:w="22"/><text x="20.0382%" y="63.50"></text></g><g><title>`0x7FF9F6CFFAE4 (22 samples, 0.29%)</title><rect x="19.7882%" y="37" width="0.2912%" height="15" fill="rgb(236,28,36)" fg:x="1495" fg:w="22"/><text x="20.0382%" y="47.50"></text></g><g><title>`0x7FF9F6C5D717 (29 samples, 0.38%)</title><rect x="20.0794%" y="85" width="0.3839%" height="15" fill="rgb(249,185,26)" fg:x="1517" fg:w="29"/><text x="20.3294%" y="95.50"></text></g><g><title>`0x7FF9F6C0E5EF (29 samples, 0.38%)</title><rect x="20.0794%" y="69" width="0.3839%" height="15" fill="rgb(249,174,33)" fg:x="1517" fg:w="29"/><text x="20.3294%" y="79.50"></text></g><g><title>`0x7FF9F6CFFAE4 (29 samples, 0.38%)</title><rect x="20.0794%" y="53" width="0.3839%" height="15" fill="rgb(233,201,37)" fg:x="1517" fg:w="29"/><text x="20.3294%" y="63.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;std::collections::hash::map::HashMap (57 samples, 0.75%)</title><rect x="19.7485%" y="293" width="0.7545%" height="15" fill="rgb(221,78,26)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="303.50"></text></g><g><title>day22.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;std::collections::hash::map::HashMap (57 samples, 0.75%)</title><rect x="19.7485%" y="277" width="0.7545%" height="15" fill="rgb(250,127,30)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="287.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;std::collections::hash::map::HashMap (57 samples, 0.75%)</title><rect x="19.7485%" y="261" width="0.7545%" height="15" fill="rgb(230,49,44)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="271.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (57 samples, 0.75%)</title><rect x="19.7485%" y="245" width="0.7545%" height="15" fill="rgb(229,67,23)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="255.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (57 samples, 0.75%)</title><rect x="19.7485%" y="229" width="0.7545%" height="15" fill="rgb(249,83,47)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="239.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (57 samples, 0.75%)</title><rect x="19.7485%" y="213" width="0.7545%" height="15" fill="rgb(215,43,3)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="223.50"></text></g><g><title>day22.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$ (57 samples, 0.75%)</title><rect x="19.7485%" y="197" width="0.7545%" height="15" fill="rgb(238,154,13)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="207.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::drop_inner_table (57 samples, 0.75%)</title><rect x="19.7485%" y="181" width="0.7545%" height="15" fill="rgb(219,56,2)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="191.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::free_buckets (57 samples, 0.75%)</title><rect x="19.7485%" y="165" width="0.7545%" height="15" fill="rgb(233,0,4)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="175.50"></text></g><g><title>day22.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (57 samples, 0.75%)</title><rect x="19.7485%" y="149" width="0.7545%" height="15" fill="rgb(235,30,7)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="159.50"></text></g><g><title>day22.exe`alloc::alloc::dealloc (57 samples, 0.75%)</title><rect x="19.7485%" y="133" width="0.7545%" height="15" fill="rgb(250,79,13)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="143.50"></text></g><g><title>`0x7FF9F6BD2871 (57 samples, 0.75%)</title><rect x="19.7485%" y="117" width="0.7545%" height="15" fill="rgb(211,146,34)" fg:x="1492" fg:w="57"/><text x="19.9985%" y="127.50"></text></g><g><title>`0x7FF9F6BCA83A (54 samples, 0.71%)</title><rect x="19.7882%" y="101" width="0.7148%" height="15" fill="rgb(228,22,38)" fg:x="1495" fg:w="54"/><text x="20.0382%" y="111.50"></text></g><g><title>`0x7FF9F6C5D96F (3 samples, 0.04%)</title><rect x="20.4633%" y="85" width="0.0397%" height="15" fill="rgb(235,168,5)" fg:x="1546" fg:w="3"/><text x="20.7133%" y="95.50"></text></g><g><title>`0x7FF9F6C0E5EF (3 samples, 0.04%)</title><rect x="20.4633%" y="69" width="0.0397%" height="15" fill="rgb(221,155,16)" fg:x="1546" fg:w="3"/><text x="20.7133%" y="79.50"></text></g><g><title>`0x7FF9F6CFFAE4 (3 samples, 0.04%)</title><rect x="20.4633%" y="53" width="0.0397%" height="15" fill="rgb(215,215,53)" fg:x="1546" fg:w="3"/><text x="20.7133%" y="63.50"></text></g><g><title>day22.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;std::collections::hash::map::HashMap (58 samples, 0.77%)</title><rect x="20.5030%" y="293" width="0.7677%" height="15" fill="rgb(223,4,10)" fg:x="1549" fg:w="58"/><text x="20.7530%" y="303.50"></text></g><g><title>day22.exe`core::ptr::non_null::impl$13::eq(core::ptr::non_null::NonNull&lt;std::collections::hash::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher&gt; &gt;*, core::ptr::non_null::NonNull&lt;std::collections::hash::map::HashMap (58 samples, 0.77%)</title><rect x="20.5030%" y="277" width="0.7677%" height="15" fill="rgb(234,103,6)" fg:x="1549" fg:w="58"/><text x="20.7530%" y="287.50"></text></g><g><title>day22.exe`day22::generate_valid_difference_patterns (1 samples, 0.01%)</title><rect x="21.2707%" y="293" width="0.0132%" height="15" fill="rgb(227,97,0)" fg:x="1607" fg:w="1"/><text x="21.5207%" y="303.50"></text></g><g><title>day22.exe`alloc::vec::Vec&lt;i32,alloc::alloc::Global&gt;::push (1 samples, 0.01%)</title><rect x="21.2707%" y="277" width="0.0132%" height="15" fill="rgb(234,150,53)" fg:x="1607" fg:w="1"/><text x="21.5207%" y="287.50"></text></g><g><title>day22.exe`core::ptr::write (1 samples, 0.01%)</title><rect x="21.2707%" y="261" width="0.0132%" height="15" fill="rgb(228,201,54)" fg:x="1607" fg:w="1"/><text x="21.5207%" y="271.50"></text></g><g><title>day22.exe`hashbrown::raw::Bucket&lt;tuple$&lt;i32,i32&gt; &gt;::write(tuple$ (4 samples, 0.05%)</title><rect x="21.4030%" y="229" width="0.0529%" height="15" fill="rgb(222,22,37)" fg:x="1617" fg:w="4"/><text x="21.6530%" y="239.50"></text></g><g><title>day22.exe`hashbrown::raw::Bucket&lt;tuple$&lt;i32,i32&gt; &gt;::as_ptr (4 samples, 0.05%)</title><rect x="21.4030%" y="213" width="0.0529%" height="15" fill="rgb(237,53,32)" fg:x="1617" fg:w="4"/><text x="21.6530%" y="223.50"></text></g><g><title>day22.exe`core::ptr::write(tuple$&lt;i32,i32&gt;*, tuple$ (4 samples, 0.05%)</title><rect x="21.4030%" y="197" width="0.0529%" height="15" fill="rgb(233,25,53)" fg:x="1617" fg:w="4"/><text x="21.6530%" y="207.50"></text></g><g><title>day22.exe`core::intrinsics::copy_nonoverlapping (91 samples, 1.20%)</title><rect x="21.4825%" y="181" width="1.2045%" height="15" fill="rgb(210,40,34)" fg:x="1623" fg:w="91"/><text x="21.7325%" y="191.50"></text></g><g><title>`0x7FF9F6BCBB97 (1 samples, 0.01%)</title><rect x="22.6870%" y="53" width="0.0132%" height="15" fill="rgb(241,220,44)" fg:x="1714" fg:w="1"/><text x="22.9370%" y="63.50"></text></g><g><title>`0x7FF9F6BCA3F9 (2 samples, 0.03%)</title><rect x="22.6870%" y="69" width="0.0265%" height="15" fill="rgb(235,28,35)" fg:x="1714" fg:w="2"/><text x="22.9370%" y="79.50"></text></g><g><title>`0x7FF9F6BCBBB2 (1 samples, 0.01%)</title><rect x="22.7002%" y="53" width="0.0132%" height="15" fill="rgb(210,56,17)" fg:x="1715" fg:w="1"/><text x="22.9502%" y="63.50"></text></g><g><title>`0x7FF9F6BCA513 (1 samples, 0.01%)</title><rect x="22.7134%" y="69" width="0.0132%" height="15" fill="rgb(224,130,29)" fg:x="1716" fg:w="1"/><text x="22.9634%" y="79.50"></text></g><g><title>`0x7FF9F6C5D0B7 (1 samples, 0.01%)</title><rect x="22.7267%" y="53" width="0.0132%" height="15" fill="rgb(235,212,8)" fg:x="1717" fg:w="1"/><text x="22.9767%" y="63.50"></text></g><g><title>`0x7FF9F6BCA83A (2 samples, 0.03%)</title><rect x="22.7267%" y="69" width="0.0265%" height="15" fill="rgb(223,33,50)" fg:x="1717" fg:w="2"/><text x="22.9767%" y="79.50"></text></g><g><title>`0x7FF9F6C5D2D2 (1 samples, 0.01%)</title><rect x="22.7399%" y="53" width="0.0132%" height="15" fill="rgb(219,149,13)" fg:x="1718" fg:w="1"/><text x="22.9899%" y="63.50"></text></g><g><title>`0x7FF9F6BCE712 (1 samples, 0.01%)</title><rect x="22.7399%" y="37" width="0.0132%" height="15" fill="rgb(250,156,29)" fg:x="1718" fg:w="1"/><text x="22.9899%" y="47.50"></text></g><g><title>day22.exe`core::ptr::drop_in_place(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (7 samples, 0.09%)</title><rect x="22.6870%" y="181" width="0.0927%" height="15" fill="rgb(216,193,19)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="191.50"></text></g><g><title>day22.exe`hashbrown::scopeguard::impl$3::drop(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (7 samples, 0.09%)</title><rect x="22.6870%" y="165" width="0.0927%" height="15" fill="rgb(216,135,14)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="175.50"></text></g><g><title>day22.exe`hashbrown::raw::impl$12::prepare_resize::closure$0(hashbrown::raw::impl$12::prepare_resize::closure_env$0 (7 samples, 0.09%)</title><rect x="22.6870%" y="149" width="0.0927%" height="15" fill="rgb(241,47,5)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="159.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::free_buckets (7 samples, 0.09%)</title><rect x="22.6870%" y="133" width="0.0927%" height="15" fill="rgb(233,42,35)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="143.50"></text></g><g><title>day22.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (7 samples, 0.09%)</title><rect x="22.6870%" y="117" width="0.0927%" height="15" fill="rgb(231,13,6)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="127.50"></text></g><g><title>day22.exe`alloc::alloc::dealloc (7 samples, 0.09%)</title><rect x="22.6870%" y="101" width="0.0927%" height="15" fill="rgb(207,181,40)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="111.50"></text></g><g><title>`0x7FF9F6BD2871 (7 samples, 0.09%)</title><rect x="22.6870%" y="85" width="0.0927%" height="15" fill="rgb(254,173,49)" fg:x="1714" fg:w="7"/><text x="22.9370%" y="95.50"></text></g><g><title>`0x7FF9F6BCAC3D (2 samples, 0.03%)</title><rect x="22.7531%" y="69" width="0.0265%" height="15" fill="rgb(221,1,38)" fg:x="1719" fg:w="2"/><text x="23.0031%" y="79.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::bucket_ptr (13 samples, 0.17%)</title><rect x="22.7796%" y="181" width="0.1721%" height="15" fill="rgb(206,124,46)" fg:x="1721" fg:w="13"/><text x="23.0296%" y="191.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::full_buckets_indices (1 samples, 0.01%)</title><rect x="22.9517%" y="181" width="0.0132%" height="15" fill="rgb(249,21,11)" fg:x="1734" fg:w="1"/><text x="23.2017%" y="191.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="22.9517%" y="165" width="0.0132%" height="15" fill="rgb(222,201,40)" fg:x="1734" fg:w="1"/><text x="23.2017%" y="175.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="22.9517%" y="149" width="0.0132%" height="15" fill="rgb(235,61,29)" fg:x="1734" fg:w="1"/><text x="23.2017%" y="159.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="22.9517%" y="133" width="0.0132%" height="15" fill="rgb(219,207,3)" fg:x="1734" fg:w="1"/><text x="23.2017%" y="143.50"></text></g><g><title>day22.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (37 samples, 0.49%)</title><rect x="22.9649%" y="133" width="0.4897%" height="15" fill="rgb(222,56,46)" fg:x="1735" fg:w="37"/><text x="23.2149%" y="143.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_insert_slot_in_group (124 samples, 1.64%)</title><rect x="22.9649%" y="149" width="1.6413%" height="15" fill="rgb(239,76,54)" fg:x="1735" fg:w="124"/><text x="23.2149%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty_or_deleted (87 samples, 1.15%)</title><rect x="23.4547%" y="133" width="1.1516%" height="15" fill="rgb(231,124,27)" fg:x="1772" fg:w="87"/><text x="23.7047%" y="143.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (45 samples, 0.60%)</title><rect x="24.0106%" y="117" width="0.5956%" height="15" fill="rgb(249,195,6)" fg:x="1814" fg:w="45"/><text x="24.2606%" y="127.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::fix_insert_slot (92 samples, 1.22%)</title><rect x="24.6062%" y="149" width="1.2177%" height="15" fill="rgb(237,174,47)" fg:x="1859" fg:w="92"/><text x="24.8562%" y="159.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::is_bucket_full (92 samples, 1.22%)</title><rect x="24.6062%" y="133" width="1.2177%" height="15" fill="rgb(206,201,31)" fg:x="1859" fg:w="92"/><text x="24.8562%" y="143.50"></text></g><g><title>day22.exe`hashbrown::control::tag::Tag::is_full (8 samples, 0.11%)</title><rect x="25.7181%" y="117" width="0.1059%" height="15" fill="rgb(231,57,52)" fg:x="1943" fg:w="8"/><text x="25.9681%" y="127.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_insert_slot (227 samples, 3.00%)</title><rect x="22.9649%" y="165" width="3.0046%" height="15" fill="rgb(248,177,22)" fg:x="1735" fg:w="227"/><text x="23.2149%" y="175.50">day..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::probe_seq (11 samples, 0.15%)</title><rect x="25.8240%" y="149" width="0.1456%" height="15" fill="rgb(215,211,37)" fg:x="1951" fg:w="11"/><text x="26.0740%" y="159.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::prepare_insert_slot (238 samples, 3.15%)</title><rect x="22.9649%" y="181" width="3.1502%" height="15" fill="rgb(241,128,51)" fg:x="1735" fg:w="238"/><text x="23.2149%" y="191.50">day..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::set_ctrl_hash (11 samples, 0.15%)</title><rect x="25.9696%" y="165" width="0.1456%" height="15" fill="rgb(227,165,31)" fg:x="1962" fg:w="11"/><text x="26.2196%" y="175.50"></text></g><g><title>day22.exe`hashbrown::control::tag::Tag::full (11 samples, 0.15%)</title><rect x="25.9696%" y="149" width="0.1456%" height="15" fill="rgb(228,167,24)" fg:x="1962" fg:w="11"/><text x="26.2196%" y="159.50"></text></g><g><title>day22.exe`core::num::impl$11::wrapping_sub (1 samples, 0.01%)</title><rect x="26.1019%" y="133" width="0.0132%" height="15" fill="rgb(228,143,12)" fg:x="1972" fg:w="1"/><text x="26.3519%" y="143.50"></text></g><g><title>day22.exe`hashbrown::control::tag::TagSliceExt::fill_empty(ref_mut$&lt;slice2$ (22 samples, 0.29%)</title><rect x="26.1152%" y="149" width="0.2912%" height="15" fill="rgb(249,149,8)" fg:x="1973" fg:w="22"/><text x="26.3652%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::tag::impl$2::fill_tag(ref_mut$&lt;slice2$ (22 samples, 0.29%)</title><rect x="26.1152%" y="133" width="0.2912%" height="15" fill="rgb(243,35,44)" fg:x="1973" fg:w="22"/><text x="26.3652%" y="143.50"></text></g><g><title>day22.exe`core::ptr::mut_ptr::impl$0::write_bytes (22 samples, 0.29%)</title><rect x="26.1152%" y="117" width="0.2912%" height="15" fill="rgb(246,89,9)" fg:x="1973" fg:w="22"/><text x="26.3652%" y="127.50"></text></g><g><title>day22.exe`core::intrinsics::write_bytes (22 samples, 0.29%)</title><rect x="26.1152%" y="101" width="0.2912%" height="15" fill="rgb(233,213,13)" fg:x="1973" fg:w="22"/><text x="26.3652%" y="111.50"></text></g><g><title>`0x7FF9D82E1BC0 (22 samples, 0.29%)</title><rect x="26.1152%" y="85" width="0.2912%" height="15" fill="rgb(233,141,41)" fg:x="1973" fg:w="22"/><text x="26.3652%" y="95.50"></text></g><g><title>`0x7FF9F6BAFB34 (1 samples, 0.01%)</title><rect x="26.4064%" y="85" width="0.0132%" height="15" fill="rgb(239,167,4)" fg:x="1995" fg:w="1"/><text x="26.6564%" y="95.50"></text></g><g><title>`0x7FF9F6BAFC80 (17 samples, 0.23%)</title><rect x="26.4196%" y="85" width="0.2250%" height="15" fill="rgb(209,217,16)" fg:x="1996" fg:w="17"/><text x="26.6696%" y="95.50"></text></g><g><title>`0x7FF9F6BAFC84 (2 samples, 0.03%)</title><rect x="26.6446%" y="85" width="0.0265%" height="15" fill="rgb(219,88,35)" fg:x="2013" fg:w="2"/><text x="26.8946%" y="95.50"></text></g><g><title>`0x7FF9F6BAFEE0 (1 samples, 0.01%)</title><rect x="26.6711%" y="85" width="0.0132%" height="15" fill="rgb(220,193,23)" fg:x="2015" fg:w="1"/><text x="26.9211%" y="95.50"></text></g><g><title>`0x7FF9F6BB0158 (1 samples, 0.01%)</title><rect x="26.6843%" y="85" width="0.0132%" height="15" fill="rgb(230,90,52)" fg:x="2016" fg:w="1"/><text x="26.9343%" y="95.50"></text></g><g><title>`0x7FF9F6BB03AA (1 samples, 0.01%)</title><rect x="26.6976%" y="85" width="0.0132%" height="15" fill="rgb(252,106,19)" fg:x="2017" fg:w="1"/><text x="26.9476%" y="95.50"></text></g><g><title>`0x7FF9F6BB05BA (2 samples, 0.03%)</title><rect x="26.7108%" y="85" width="0.0265%" height="15" fill="rgb(206,74,20)" fg:x="2018" fg:w="2"/><text x="26.9608%" y="95.50"></text></g><g><title>`0x7FF9F6BB2636 (1 samples, 0.01%)</title><rect x="26.7373%" y="53" width="0.0132%" height="15" fill="rgb(230,138,44)" fg:x="2020" fg:w="1"/><text x="26.9873%" y="63.50"></text></g><g><title>`0x7FF9F6BB2BF1 (1 samples, 0.01%)</title><rect x="26.7373%" y="37" width="0.0132%" height="15" fill="rgb(235,182,43)" fg:x="2020" fg:w="1"/><text x="26.9873%" y="47.50"></text></g><g><title>`0x7FF9F6BB2773 (15 samples, 0.20%)</title><rect x="26.7505%" y="53" width="0.1985%" height="15" fill="rgb(242,16,51)" fg:x="2021" fg:w="15"/><text x="27.0005%" y="63.50"></text></g><g><title>`0x7FF9F6CFFA24 (15 samples, 0.20%)</title><rect x="26.7505%" y="37" width="0.1985%" height="15" fill="rgb(248,9,4)" fg:x="2021" fg:w="15"/><text x="27.0005%" y="47.50"></text></g><g><title>`0x7FF9F6BB238A (25 samples, 0.33%)</title><rect x="26.9490%" y="37" width="0.3309%" height="15" fill="rgb(210,31,22)" fg:x="2036" fg:w="25"/><text x="27.1990%" y="47.50"></text></g><g><title>`0x7FF9F6BB1EDF (43 samples, 0.57%)</title><rect x="26.7373%" y="69" width="0.5692%" height="15" fill="rgb(239,54,39)" fg:x="2020" fg:w="43"/><text x="26.9873%" y="79.50"></text></g><g><title>`0x7FF9F6BB2854 (27 samples, 0.36%)</title><rect x="26.9490%" y="53" width="0.3574%" height="15" fill="rgb(230,99,41)" fg:x="2036" fg:w="27"/><text x="27.1990%" y="63.50"></text></g><g><title>`0x7FF9F6BB238E (2 samples, 0.03%)</title><rect x="27.2799%" y="37" width="0.0265%" height="15" fill="rgb(253,106,12)" fg:x="2061" fg:w="2"/><text x="27.5299%" y="47.50"></text></g><g><title>`0x7FF9F6BCE4C0 (1 samples, 0.01%)</title><rect x="27.3064%" y="53" width="0.0132%" height="15" fill="rgb(213,46,41)" fg:x="2063" fg:w="1"/><text x="27.5564%" y="63.50"></text></g><g><title>`0x7FF9F6BC7776 (70 samples, 0.93%)</title><rect x="26.4064%" y="117" width="0.9265%" height="15" fill="rgb(215,133,35)" fg:x="1995" fg:w="70"/><text x="26.6564%" y="127.50"></text></g><g><title>`0x7FF9F6BC7AFE (70 samples, 0.93%)</title><rect x="26.4064%" y="101" width="0.9265%" height="15" fill="rgb(213,28,5)" fg:x="1995" fg:w="70"/><text x="26.6564%" y="111.50"></text></g><g><title>`0x7FF9F6BB09B0 (45 samples, 0.60%)</title><rect x="26.7373%" y="85" width="0.5956%" height="15" fill="rgb(215,77,49)" fg:x="2020" fg:w="45"/><text x="26.9873%" y="95.50"></text></g><g><title>`0x7FF9F6BB1F0D (2 samples, 0.03%)</title><rect x="27.3064%" y="69" width="0.0265%" height="15" fill="rgb(248,100,22)" fg:x="2063" fg:w="2"/><text x="27.5564%" y="79.50"></text></g><g><title>`0x7FF9F6BCE7EC (1 samples, 0.01%)</title><rect x="27.3197%" y="53" width="0.0132%" height="15" fill="rgb(208,67,9)" fg:x="2064" fg:w="1"/><text x="27.5697%" y="63.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::prepare_resize (93 samples, 1.23%)</title><rect x="26.1152%" y="181" width="1.2310%" height="15" fill="rgb(219,133,21)" fg:x="1973" fg:w="93"/><text x="26.3652%" y="191.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (93 samples, 1.23%)</title><rect x="26.1152%" y="165" width="1.2310%" height="15" fill="rgb(246,46,29)" fg:x="1973" fg:w="93"/><text x="26.3652%" y="175.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::new_uninitialized (71 samples, 0.94%)</title><rect x="26.4064%" y="149" width="0.9398%" height="15" fill="rgb(246,185,52)" fg:x="1995" fg:w="71"/><text x="26.6564%" y="159.50"></text></g><g><title>day22.exe`hashbrown::raw::alloc::inner::do_alloc (71 samples, 0.94%)</title><rect x="26.4064%" y="133" width="0.9398%" height="15" fill="rgb(252,136,11)" fg:x="1995" fg:w="71"/><text x="26.6564%" y="143.50"></text></g><g><title>`0x7FF9F6BC7784 (1 samples, 0.01%)</title><rect x="27.3329%" y="117" width="0.0132%" height="15" fill="rgb(219,138,53)" fg:x="2065" fg:w="1"/><text x="27.5829%" y="127.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::impl$2::next (2 samples, 0.03%)</title><rect x="27.4653%" y="149" width="0.0265%" height="15" fill="rgb(211,51,23)" fg:x="2075" fg:w="2"/><text x="27.7153%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.03%)</title><rect x="27.4653%" y="133" width="0.0265%" height="15" fill="rgb(247,221,28)" fg:x="2075" fg:w="2"/><text x="27.7153%" y="143.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.01%)</title><rect x="27.4785%" y="117" width="0.0132%" height="15" fill="rgb(251,222,45)" fg:x="2076" fg:w="1"/><text x="27.7285%" y="127.50"></text></g><g><title>day22.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.01%)</title><rect x="27.4785%" y="101" width="0.0132%" height="15" fill="rgb(217,162,53)" fg:x="2076" fg:w="1"/><text x="27.7285%" y="111.50"></text></g><g><title>day22.exe`hashbrown::raw::impl$33::next (12 samples, 0.16%)</title><rect x="27.3461%" y="181" width="0.1588%" height="15" fill="rgb(229,93,14)" fg:x="2066" fg:w="12"/><text x="27.5961%" y="191.50"></text></g><g><title>day22.exe`hashbrown::raw::FullBucketsIndices::next_impl (12 samples, 0.16%)</title><rect x="27.3461%" y="165" width="0.1588%" height="15" fill="rgb(209,67,49)" fg:x="2066" fg:w="12"/><text x="27.5961%" y="175.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="27.4917%" y="149" width="0.0132%" height="15" fill="rgb(213,87,29)" fg:x="2077" fg:w="1"/><text x="27.7417%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="27.4917%" y="133" width="0.0132%" height="15" fill="rgb(205,151,52)" fg:x="2077" fg:w="1"/><text x="27.7417%" y="143.50"></text></g><g><title>day22.exe`core::hash::impls::impl$5::hash (1 samples, 0.01%)</title><rect x="27.5050%" y="117" width="0.0132%" height="15" fill="rgb(253,215,39)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="127.50"></text></g><g><title>day22.exe`core::hash::impls::impl$16::hash (1 samples, 0.01%)</title><rect x="27.5050%" y="101" width="0.0132%" height="15" fill="rgb(221,220,41)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="111.50"></text></g><g><title>day22.exe`core::hash::Hasher::write_i32 (1 samples, 0.01%)</title><rect x="27.5050%" y="85" width="0.0132%" height="15" fill="rgb(218,133,21)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="95.50"></text></g><g><title>day22.exe`rustc_hash::impl$3::write_u32 (1 samples, 0.01%)</title><rect x="27.5050%" y="69" width="0.0132%" height="15" fill="rgb(221,193,43)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="79.50"></text></g><g><title>day22.exe`rustc_hash::FxHasher::add_to_hash (1 samples, 0.01%)</title><rect x="27.5050%" y="53" width="0.0132%" height="15" fill="rgb(240,128,52)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="63.50"></text></g><g><title>day22.exe`core::num::impl$11::wrapping_mul (1 samples, 0.01%)</title><rect x="27.5050%" y="37" width="0.0132%" height="15" fill="rgb(253,114,12)" fg:x="2078" fg:w="1"/><text x="27.7550%" y="47.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;i32,i32,rustc_hash::FxBuildHasher&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (460 samples, 6.09%)</title><rect x="21.4560%" y="229" width="6.0887%" height="15" fill="rgb(215,223,47)" fg:x="1621" fg:w="460"/><text x="21.7060%" y="239.50">day22.ex..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (460 samples, 6.09%)</title><rect x="21.4560%" y="213" width="6.0887%" height="15" fill="rgb(248,225,23)" fg:x="1621" fg:w="460"/><text x="21.7060%" y="223.50">day22.ex..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (458 samples, 6.06%)</title><rect x="21.4825%" y="197" width="6.0622%" height="15" fill="rgb(250,108,0)" fg:x="1623" fg:w="458"/><text x="21.7325%" y="207.50">day22.ex..</text></g><g><title>day22.exe`hashbrown::raw::impl$8::reserve_rehash::closure$0(hashbrown::raw::impl$8::reserve_rehash::closure_env$0&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (3 samples, 0.04%)</title><rect x="27.5050%" y="181" width="0.0397%" height="15" fill="rgb(228,208,7)" fg:x="2078" fg:w="3"/><text x="27.7550%" y="191.50"></text></g><g><title>day22.exe`hashbrown::map::make_hasher::closure$0(hashbrown::map::make_hasher::closure_env$0&lt;i32,i32,rustc_hash::FxBuildHasher&gt;*, tuple$ (3 samples, 0.04%)</title><rect x="27.5050%" y="165" width="0.0397%" height="15" fill="rgb(244,45,10)" fg:x="2078" fg:w="3"/><text x="27.7550%" y="175.50"></text></g><g><title>day22.exe`hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="27.5050%" y="149" width="0.0397%" height="15" fill="rgb(207,125,25)" fg:x="2078" fg:w="3"/><text x="27.7550%" y="159.50"></text></g><g><title>day22.exe`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="27.5050%" y="133" width="0.0397%" height="15" fill="rgb(210,195,18)" fg:x="2078" fg:w="3"/><text x="27.7550%" y="143.50"></text></g><g><title>day22.exe`rustc_hash::impl$3::finish (2 samples, 0.03%)</title><rect x="27.5182%" y="117" width="0.0265%" height="15" fill="rgb(249,80,12)" fg:x="2079" fg:w="2"/><text x="27.7682%" y="127.50"></text></g><g><title>day22.exe`core::num::impl$11::rotate_left (2 samples, 0.03%)</title><rect x="27.5182%" y="101" width="0.0265%" height="15" fill="rgb(221,65,9)" fg:x="2079" fg:w="2"/><text x="27.7682%" y="111.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::bucket (15 samples, 0.20%)</title><rect x="27.5447%" y="229" width="0.1985%" height="15" fill="rgb(235,49,36)" fg:x="2081" fg:w="15"/><text x="27.7947%" y="239.50"></text></g><g><title>day22.exe`hashbrown::raw::Bucket&lt;tuple$&lt;i32,i32&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$ (15 samples, 0.20%)</title><rect x="27.5447%" y="213" width="0.1985%" height="15" fill="rgb(225,32,20)" fg:x="2081" fg:w="15"/><text x="27.7947%" y="223.50"></text></g><g><title>day22.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (15 samples, 0.20%)</title><rect x="27.5447%" y="197" width="0.1985%" height="15" fill="rgb(215,141,46)" fg:x="2081" fg:w="15"/><text x="27.7947%" y="207.50"></text></g><g><title>day22.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (1 samples, 0.01%)</title><rect x="27.7432%" y="197" width="0.0132%" height="15" fill="rgb(250,160,47)" fg:x="2096" fg:w="1"/><text x="27.9932%" y="207.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::load (2 samples, 0.03%)</title><rect x="27.7565%" y="197" width="0.0265%" height="15" fill="rgb(216,222,40)" fg:x="2097" fg:w="2"/><text x="28.0065%" y="207.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.03%)</title><rect x="27.7565%" y="181" width="0.0265%" height="15" fill="rgb(234,217,39)" fg:x="2097" fg:w="2"/><text x="28.0065%" y="191.50"></text></g><g><title>day22.exe`core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="27.7565%" y="165" width="0.0265%" height="15" fill="rgb(207,178,40)" fg:x="2097" fg:w="2"/><text x="28.0065%" y="175.50"></text></g><g><title>day22.exe`hashbrown::raw::ProbeSeq::move_next (1 samples, 0.01%)</title><rect x="27.7829%" y="197" width="0.0132%" height="15" fill="rgb(221,136,13)" fg:x="2099" fg:w="1"/><text x="28.0329%" y="207.50"></text></g><g><title>day22.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (13 samples, 0.17%)</title><rect x="27.7962%" y="181" width="0.1721%" height="15" fill="rgb(249,199,10)" fg:x="2100" fg:w="13"/><text x="28.0462%" y="191.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_insert_slot_in_group (25 samples, 0.33%)</title><rect x="27.7962%" y="197" width="0.3309%" height="15" fill="rgb(249,222,13)" fg:x="2100" fg:w="25"/><text x="28.0462%" y="207.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty_or_deleted (12 samples, 0.16%)</title><rect x="27.9682%" y="181" width="0.1588%" height="15" fill="rgb(244,185,38)" fg:x="2113" fg:w="12"/><text x="28.2182%" y="191.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.05%)</title><rect x="28.0741%" y="165" width="0.0529%" height="15" fill="rgb(236,202,9)" fg:x="2121" fg:w="4"/><text x="28.3241%" y="175.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_insert_slot (57 samples, 0.75%)</title><rect x="27.7432%" y="213" width="0.7545%" height="15" fill="rgb(250,229,37)" fg:x="2096" fg:w="57"/><text x="27.9932%" y="223.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::fix_insert_slot (28 samples, 0.37%)</title><rect x="28.1271%" y="197" width="0.3706%" height="15" fill="rgb(206,174,23)" fg:x="2125" fg:w="28"/><text x="28.3771%" y="207.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::is_bucket_full (28 samples, 0.37%)</title><rect x="28.1271%" y="181" width="0.3706%" height="15" fill="rgb(211,33,43)" fg:x="2125" fg:w="28"/><text x="28.3771%" y="191.50"></text></g><g><title>day22.exe`hashbrown::control::tag::Tag::is_full (21 samples, 0.28%)</title><rect x="28.2197%" y="165" width="0.2780%" height="15" fill="rgb(245,58,50)" fg:x="2132" fg:w="21"/><text x="28.4697%" y="175.50"></text></g><g><title>day22.exe`enum2$&lt;std::collections::hash::map::Entry&lt;i32,i32&gt; &gt;::or_insert(enum2$&lt;std::collections::hash::map::Entry (555 samples, 7.35%)</title><rect x="21.2839%" y="293" width="7.3461%" height="15" fill="rgb(244,68,36)" fg:x="1608" fg:w="555"/><text x="21.5339%" y="303.50">day22.exe`..</text></g><g><title>day22.exe`std::collections::hash::map::VacantEntry&lt;i32,i32&gt;::insert(std::collections::hash::map::VacantEntry (555 samples, 7.35%)</title><rect x="21.2839%" y="277" width="7.3461%" height="15" fill="rgb(232,229,15)" fg:x="1608" fg:w="555"/><text x="21.5339%" y="287.50">day22.exe`..</text></g><g><title>day22.exe`hashbrown::rustc_entry::RustcVacantEntry&lt;i32,i32,alloc::alloc::Global&gt;::insert(hashbrown::rustc_entry::RustcVacantEntry (555 samples, 7.35%)</title><rect x="21.2839%" y="261" width="7.3461%" height="15" fill="rgb(254,30,23)" fg:x="1608" fg:w="555"/><text x="21.5339%" y="271.50">day22.exe`..</text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::insert_no_grow(unsigned long long, tuple$ (555 samples, 7.35%)</title><rect x="21.2839%" y="245" width="7.3461%" height="15" fill="rgb(235,160,14)" fg:x="1608" fg:w="555"/><text x="21.5339%" y="255.50">day22.exe`..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::prepare_insert_slot (67 samples, 0.89%)</title><rect x="27.7432%" y="229" width="0.8868%" height="15" fill="rgb(212,155,44)" fg:x="2096" fg:w="67"/><text x="27.9932%" y="239.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::set_ctrl_hash (10 samples, 0.13%)</title><rect x="28.4977%" y="213" width="0.1324%" height="15" fill="rgb(226,2,50)" fg:x="2153" fg:w="10"/><text x="28.7477%" y="223.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::set_ctrl (10 samples, 0.13%)</title><rect x="28.4977%" y="197" width="0.1324%" height="15" fill="rgb(234,177,6)" fg:x="2153" fg:w="10"/><text x="28.7477%" y="207.50"></text></g><g><title>day22.exe`core::num::impl$11::wrapping_sub (8 samples, 0.11%)</title><rect x="28.5242%" y="181" width="0.1059%" height="15" fill="rgb(217,24,9)" fg:x="2155" fg:w="8"/><text x="28.7742%" y="191.50"></text></g><g><title>day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::reserve (2 samples, 0.03%)</title><rect x="28.6300%" y="261" width="0.0265%" height="15" fill="rgb(220,13,46)" fg:x="2163" fg:w="2"/><text x="28.8800%" y="271.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.03%)</title><rect x="28.6300%" y="245" width="0.0265%" height="15" fill="rgb(239,221,27)" fg:x="2163" fg:w="2"/><text x="28.8800%" y="255.50"></text></g><g><title>day22.exe`hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="28.6565%" y="261" width="0.0529%" height="15" fill="rgb(222,198,25)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="271.50"></text></g><g><title>day22.exe`core::hash::BuildHasher::hash_one (4 samples, 0.05%)</title><rect x="28.6565%" y="245" width="0.0529%" height="15" fill="rgb(211,99,13)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="255.50"></text></g><g><title>day22.exe`core::hash::impls::impl$5::hash (4 samples, 0.05%)</title><rect x="28.6565%" y="229" width="0.0529%" height="15" fill="rgb(232,111,31)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="239.50"></text></g><g><title>day22.exe`core::hash::impls::impl$16::hash (4 samples, 0.05%)</title><rect x="28.6565%" y="213" width="0.0529%" height="15" fill="rgb(245,82,37)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="223.50"></text></g><g><title>day22.exe`core::hash::Hasher::write_i32 (4 samples, 0.05%)</title><rect x="28.6565%" y="197" width="0.0529%" height="15" fill="rgb(227,149,46)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="207.50"></text></g><g><title>day22.exe`rustc_hash::impl$3::write_u32 (4 samples, 0.05%)</title><rect x="28.6565%" y="181" width="0.0529%" height="15" fill="rgb(218,36,50)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="191.50"></text></g><g><title>day22.exe`rustc_hash::FxHasher::add_to_hash (4 samples, 0.05%)</title><rect x="28.6565%" y="165" width="0.0529%" height="15" fill="rgb(226,80,48)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="175.50"></text></g><g><title>day22.exe`core::num::impl$11::wrapping_mul (4 samples, 0.05%)</title><rect x="28.6565%" y="149" width="0.0529%" height="15" fill="rgb(238,224,15)" fg:x="2165" fg:w="4"/><text x="28.9065%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (5 samples, 0.07%)</title><rect x="28.8418%" y="213" width="0.0662%" height="15" fill="rgb(241,136,10)" fg:x="2179" fg:w="5"/><text x="29.0918%" y="223.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (4 samples, 0.05%)</title><rect x="28.8551%" y="197" width="0.0529%" height="15" fill="rgb(208,32,45)" fg:x="2180" fg:w="4"/><text x="29.1051%" y="207.50"></text></g><g><title>day22.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (4 samples, 0.05%)</title><rect x="28.8551%" y="181" width="0.0529%" height="15" fill="rgb(207,135,9)" fg:x="2180" fg:w="4"/><text x="29.1051%" y="191.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::impl$2::next (9 samples, 0.12%)</title><rect x="28.8418%" y="229" width="0.1191%" height="15" fill="rgb(206,86,44)" fg:x="2179" fg:w="9"/><text x="29.0918%" y="239.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::remove_lowest_bit (4 samples, 0.05%)</title><rect x="28.9080%" y="213" width="0.0529%" height="15" fill="rgb(245,177,15)" fg:x="2184" fg:w="4"/><text x="29.1580%" y="223.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty (4 samples, 0.05%)</title><rect x="28.9610%" y="229" width="0.0529%" height="15" fill="rgb(206,64,50)" fg:x="2188" fg:w="4"/><text x="29.2110%" y="239.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_tag (3 samples, 0.04%)</title><rect x="28.9742%" y="213" width="0.0397%" height="15" fill="rgb(234,36,40)" fg:x="2189" fg:w="3"/><text x="29.2242%" y="223.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="28.9742%" y="197" width="0.0397%" height="15" fill="rgb(213,64,8)" fg:x="2189" fg:w="3"/><text x="29.2242%" y="207.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_tag (30 samples, 0.40%)</title><rect x="29.0139%" y="229" width="0.3971%" height="15" fill="rgb(210,75,36)" fg:x="2192" fg:w="30"/><text x="29.2639%" y="239.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (30 samples, 0.40%)</title><rect x="29.0139%" y="213" width="0.3971%" height="15" fill="rgb(229,88,21)" fg:x="2192" fg:w="30"/><text x="29.2639%" y="223.50"></text></g><g><title>day22.exe`hashbrown::control::tag::Tag::full (2 samples, 0.03%)</title><rect x="29.4110%" y="229" width="0.0265%" height="15" fill="rgb(252,204,47)" fg:x="2222" fg:w="2"/><text x="29.6610%" y="239.50"></text></g><g><title>day22.exe`hashbrown::raw::ProbeSeq::move_next (12 samples, 0.16%)</title><rect x="29.4375%" y="229" width="0.1588%" height="15" fill="rgb(208,77,27)" fg:x="2224" fg:w="12"/><text x="29.6875%" y="239.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::probe_seq (25 samples, 0.33%)</title><rect x="29.5963%" y="229" width="0.3309%" height="15" fill="rgb(221,76,26)" fg:x="2236" fg:w="25"/><text x="29.8463%" y="239.50"></text></g><g><title>day22.exe`std::collections::hash::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher&gt;::entry (102 samples, 1.35%)</title><rect x="28.6300%" y="293" width="1.3501%" height="15" fill="rgb(225,139,18)" fg:x="2163" fg:w="102"/><text x="28.8800%" y="303.50"></text></g><g><title>day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::rustc_entry (102 samples, 1.35%)</title><rect x="28.6300%" y="277" width="1.3501%" height="15" fill="rgb(230,137,11)" fg:x="2163" fg:w="102"/><text x="28.8800%" y="287.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::rustc_entry::impl$0::rustc_entry::closure_env$0 (96 samples, 1.27%)</title><rect x="28.7095%" y="261" width="1.2707%" height="15" fill="rgb(212,28,1)" fg:x="2169" fg:w="96"/><text x="28.9595%" y="271.50"></text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (96 samples, 1.27%)</title><rect x="28.7095%" y="245" width="1.2707%" height="15" fill="rgb(248,164,17)" fg:x="2169" fg:w="96"/><text x="28.9595%" y="255.50"></text></g><g><title>day22.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global,hashbrown::rustc_entry::impl$0::rustc_entry::closure_env$0 (4 samples, 0.05%)</title><rect x="29.9272%" y="229" width="0.0529%" height="15" fill="rgb(222,171,42)" fg:x="2261" fg:w="4"/><text x="30.1772%" y="239.50"></text></g><g><title>day22.exe`hashbrown::rustc_entry::impl$0::rustc_entry::closure$0(hashbrown::rustc_entry::impl$0::rustc_entry::closure_env$0&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;*, tuple$ (1 samples, 0.01%)</title><rect x="29.9669%" y="213" width="0.0132%" height="15" fill="rgb(243,84,45)" fg:x="2264" fg:w="1"/><text x="30.2169%" y="223.50"></text></g><g><title>day22.exe`core::cmp::impls::impl$30::eq (1 samples, 0.01%)</title><rect x="29.9669%" y="197" width="0.0132%" height="15" fill="rgb(252,49,23)" fg:x="2264" fg:w="1"/><text x="30.2169%" y="207.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (116 samples, 1.54%)</title><rect x="31.5288%" y="181" width="1.5354%" height="15" fill="rgb(215,19,7)" fg:x="2382" fg:w="116"/><text x="31.7788%" y="191.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (53 samples, 0.70%)</title><rect x="32.3627%" y="165" width="0.7015%" height="15" fill="rgb(238,81,41)" fg:x="2445" fg:w="53"/><text x="32.6127%" y="175.50"></text></g><g><title>day22.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (53 samples, 0.70%)</title><rect x="32.3627%" y="149" width="0.7015%" height="15" fill="rgb(210,199,37)" fg:x="2445" fg:w="53"/><text x="32.6127%" y="159.50"></text></g><g><title>day22.exe`hashbrown::control::bitmask::impl$2::next (2,536 samples, 33.57%)</title><rect x="31.5288%" y="197" width="33.5672%" height="15" fill="rgb(244,192,49)" fg:x="2382" fg:w="2536"/><text x="31.7788%" y="207.50">day22.exe`hashbrown::control::bitmask::impl$2::next</text></g><g><title>day22.exe`hashbrown::control::bitmask::BitMask::remove_lowest_bit (2,420 samples, 32.03%)</title><rect x="33.0642%" y="181" width="32.0318%" height="15" fill="rgb(226,211,11)" fg:x="2498" fg:w="2420"/><text x="33.3142%" y="191.50">day22.exe`hashbrown::control::bitmask::BitMask::remo..</text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::load (54 samples, 0.71%)</title><rect x="65.0960%" y="197" width="0.7148%" height="15" fill="rgb(236,162,54)" fg:x="4918" fg:w="54"/><text x="65.3460%" y="207.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (54 samples, 0.71%)</title><rect x="65.0960%" y="181" width="0.7148%" height="15" fill="rgb(220,229,9)" fg:x="4918" fg:w="54"/><text x="65.3460%" y="191.50"></text></g><g><title>day22.exe`core::intrinsics::copy_nonoverlapping (54 samples, 0.71%)</title><rect x="65.0960%" y="165" width="0.7148%" height="15" fill="rgb(250,87,22)" fg:x="4918" fg:w="54"/><text x="65.3460%" y="175.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_empty (106 samples, 1.40%)</title><rect x="65.8107%" y="197" width="1.4030%" height="15" fill="rgb(239,43,17)" fg:x="4972" fg:w="106"/><text x="66.0607%" y="207.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_tag (96 samples, 1.27%)</title><rect x="65.9431%" y="181" width="1.2707%" height="15" fill="rgb(231,177,25)" fg:x="4982" fg:w="96"/><text x="66.1931%" y="191.50"></text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (96 samples, 1.27%)</title><rect x="65.9431%" y="165" width="1.2707%" height="15" fill="rgb(219,179,1)" fg:x="4982" fg:w="96"/><text x="66.1931%" y="175.50"></text></g><g><title>day22.exe`hashbrown::control::group::sse2::Group::match_tag (2,261 samples, 29.93%)</title><rect x="67.2138%" y="197" width="29.9272%" height="15" fill="rgb(238,219,53)" fg:x="5078" fg:w="2261"/><text x="67.4638%" y="207.50">day22.exe`hashbrown::control::group::sse2::Group..</text></g><g><title>day22.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2,261 samples, 29.93%)</title><rect x="67.2138%" y="181" width="29.9272%" height="15" fill="rgb(232,167,36)" fg:x="5078" fg:w="2261"/><text x="67.4638%" y="191.50">day22.exe`core::core_arch::x86::sse2::_mm_movema..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::probe_seq (167 samples, 2.21%)</title><rect x="97.1410%" y="197" width="2.2105%" height="15" fill="rgb(244,19,51)" fg:x="7339" fg:w="167"/><text x="97.3910%" y="207.50">d..</text></g><g><title>`0x7FF9F6C7FBCC (7,535 samples, 99.74%)</title><rect x="0.0265%" y="533" width="99.7353%" height="15" fill="rgb(224,6,22)" fg:x="2" fg:w="7535"/><text x="0.2765%" y="543.50">`0x7FF9F6C7FBCC</text></g><g><title>`0x7FF9F5A4E8D7 (7,535 samples, 99.74%)</title><rect x="0.0265%" y="517" width="99.7353%" height="15" fill="rgb(224,145,5)" fg:x="2" fg:w="7535"/><text x="0.2765%" y="527.50">`0x7FF9F5A4E8D7</text></g><g><title>day22.exe`__scrt_common_main_seh() (7,532 samples, 99.70%)</title><rect x="0.0662%" y="501" width="99.6956%" height="15" fill="rgb(234,130,49)" fg:x="5" fg:w="7532"/><text x="0.3162%" y="511.50">day22.exe`__scrt_common_main_seh()</text></g><g><title>day22.exe`invoke_main() (7,526 samples, 99.62%)</title><rect x="0.1456%" y="485" width="99.6161%" height="15" fill="rgb(254,6,2)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="495.50">day22.exe`invoke_main()</text></g><g><title>day22.exe`main (7,526 samples, 99.62%)</title><rect x="0.1456%" y="469" width="99.6161%" height="15" fill="rgb(208,96,46)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="479.50">day22.exe`main</text></g><g><title>day22.exe`std::rt::lang_start_internal (7,526 samples, 99.62%)</title><rect x="0.1456%" y="453" width="99.6161%" height="15" fill="rgb(239,3,39)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="463.50">day22.exe`std::rt::lang_start_internal</text></g><g><title>day22.exe`std::panic::catch_unwind (7,526 samples, 99.62%)</title><rect x="0.1456%" y="437" width="99.6161%" height="15" fill="rgb(233,210,1)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="447.50">day22.exe`std::panic::catch_unwind</text></g><g><title>day22.exe`std::panicking::try (7,526 samples, 99.62%)</title><rect x="0.1456%" y="421" width="99.6161%" height="15" fill="rgb(244,137,37)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="431.50">day22.exe`std::panicking::try</text></g><g><title>day22.exe`std::panicking::try::do_call (7,526 samples, 99.62%)</title><rect x="0.1456%" y="405" width="99.6161%" height="15" fill="rgb(240,136,2)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="415.50">day22.exe`std::panicking::try::do_call</text></g><g><title>day22.exe`std::rt::lang_start_internal::closure$1 (7,526 samples, 99.62%)</title><rect x="0.1456%" y="389" width="99.6161%" height="15" fill="rgb(239,18,37)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="399.50">day22.exe`std::rt::lang_start_internal::closure$1</text></g><g><title>day22.exe`std::panic::catch_unwind (7,526 samples, 99.62%)</title><rect x="0.1456%" y="373" width="99.6161%" height="15" fill="rgb(218,185,22)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="383.50">day22.exe`std::panic::catch_unwind</text></g><g><title>day22.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (7,526 samples, 99.62%)</title><rect x="0.1456%" y="357" width="99.6161%" height="15" fill="rgb(225,218,4)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="367.50">day22.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>day22.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (7,526 samples, 99.62%)</title><rect x="0.1456%" y="341" width="99.6161%" height="15" fill="rgb(230,182,32)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="351.50">day22.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>day22.exe`day22::main (7,526 samples, 99.62%)</title><rect x="0.1456%" y="325" width="99.6161%" height="15" fill="rgb(242,56,43)" fg:x="11" fg:w="7526"/><text x="0.3956%" y="335.50">day22.exe`day22::main</text></g><g><title>day22.exe`day22::part_2(ref$&lt;slice2$ (7,465 samples, 98.81%)</title><rect x="0.9530%" y="309" width="98.8087%" height="15" fill="rgb(233,99,24)" fg:x="72" fg:w="7465"/><text x="1.2030%" y="319.50">day22.exe`day22::part_2(ref$&lt;slice2$</text></g><g><title>day22.exe`std::collections::hash::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher&gt;::get (5,272 samples, 69.78%)</title><rect x="29.9801%" y="293" width="69.7816%" height="15" fill="rgb(234,209,42)" fg:x="2265" fg:w="5272"/><text x="30.2301%" y="303.50">day22.exe`std::collections::hash::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher&gt;::get</text></g><g><title>day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::get (5,272 samples, 69.78%)</title><rect x="29.9801%" y="277" width="69.7816%" height="15" fill="rgb(227,7,12)" fg:x="2265" fg:w="5272"/><text x="30.2301%" y="287.50">day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::get</text></g><g><title>day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::get_inner (5,272 samples, 69.78%)</title><rect x="29.9801%" y="261" width="69.7816%" height="15" fill="rgb(245,203,43)" fg:x="2265" fg:w="5272"/><text x="30.2301%" y="271.50">day22.exe`hashbrown::map::HashMap&lt;i32,i32,rustc_hash::FxBuildHasher,alloc::alloc::Global&gt;::get_inner</text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (5,227 samples, 69.19%)</title><rect x="30.5758%" y="245" width="69.1860%" height="15" fill="rgb(238,205,33)" fg:x="2310" fg:w="5227"/><text x="30.8258%" y="255.50">day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::e..</text></g><g><title>day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (5,227 samples, 69.19%)</title><rect x="30.5758%" y="229" width="69.1860%" height="15" fill="rgb(231,56,7)" fg:x="2310" fg:w="5227"/><text x="30.8258%" y="239.50">day22.exe`hashbrown::raw::RawTable&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::..</text></g><g><title>day22.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (5,227 samples, 69.19%)</title><rect x="30.5758%" y="213" width="69.1860%" height="15" fill="rgb(244,186,29)" fg:x="2310" fg:w="5227"/><text x="30.8258%" y="223.50">day22.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tu..</text></g><g><title>day22.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (31 samples, 0.41%)</title><rect x="99.3514%" y="197" width="0.4103%" height="15" fill="rgb(234,111,31)" fg:x="7506" fg:w="31"/><text x="99.6014%" y="207.50"></text></g><g><title>day22.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;i32,i32,i32&gt;*, tuple$ (31 samples, 0.41%)</title><rect x="99.3514%" y="181" width="0.4103%" height="15" fill="rgb(241,149,10)" fg:x="7506" fg:w="31"/><text x="99.6014%" y="191.50"></text></g><g><title>day22.exe`hashbrown::impl$0::equivalent (31 samples, 0.41%)</title><rect x="99.3514%" y="165" width="0.4103%" height="15" fill="rgb(249,206,44)" fg:x="7506" fg:w="31"/><text x="99.6014%" y="175.50"></text></g><g><title>day22.exe`core::cmp::impls::impl$9::eq (31 samples, 0.41%)</title><rect x="99.3514%" y="149" width="0.4103%" height="15" fill="rgb(251,153,30)" fg:x="7506" fg:w="31"/><text x="99.6014%" y="159.50"></text></g><g><title>day22.exe`core::cmp::impls::impl$30::eq (9 samples, 0.12%)</title><rect x="99.6426%" y="133" width="0.1191%" height="15" fill="rgb(239,152,38)" fg:x="7528" fg:w="9"/><text x="99.8926%" y="143.50"></text></g><g><title>`0x7FF9F6C9237F (1 samples, 0.01%)</title><rect x="99.7617%" y="517" width="0.0132%" height="15" fill="rgb(249,139,47)" fg:x="7537" fg:w="1"/><text x="100.0117%" y="527.50"></text></g><g><title>`0x7FF9F6C92402 (1 samples, 0.01%)</title><rect x="99.7617%" y="501" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="7537" fg:w="1"/><text x="100.0117%" y="511.50"></text></g><g><title>`0x7FF9F6BBFDB5 (1 samples, 0.01%)</title><rect x="99.7617%" y="485" width="0.0132%" height="15" fill="rgb(216,46,15)" fg:x="7537" fg:w="1"/><text x="100.0117%" y="495.50"></text></g><g><title>`0x7FF9F6C4BCFB (1 samples, 0.01%)</title><rect x="99.7750%" y="501" width="0.0132%" height="15" fill="rgb(250,74,19)" fg:x="7538" fg:w="1"/><text x="100.0250%" y="511.50"></text></g><g><title>`0x7FF9F6BBD385 (1 samples, 0.01%)</title><rect x="99.7750%" y="485" width="0.0132%" height="15" fill="rgb(249,42,33)" fg:x="7538" fg:w="1"/><text x="100.0250%" y="495.50"></text></g><g><title>`0x7FF9F6C976ED (1 samples, 0.01%)</title><rect x="99.7750%" y="469" width="0.0132%" height="15" fill="rgb(242,149,17)" fg:x="7538" fg:w="1"/><text x="100.0250%" y="479.50"></text></g><g><title>`0x7FF9F6BFEC05 (1 samples, 0.01%)</title><rect x="99.7750%" y="453" width="0.0132%" height="15" fill="rgb(244,29,21)" fg:x="7538" fg:w="1"/><text x="100.0250%" y="463.50"></text></g><g><title>`0x7FF9F6C4CA46 (1 samples, 0.01%)</title><rect x="99.7882%" y="485" width="0.0132%" height="15" fill="rgb(220,130,37)" fg:x="7539" fg:w="1"/><text x="100.0382%" y="495.50"></text></g><g><title>`0x7FF9F6BB8E9E (1 samples, 0.01%)</title><rect x="99.7882%" y="469" width="0.0132%" height="15" fill="rgb(211,67,2)" fg:x="7539" fg:w="1"/><text x="100.0382%" y="479.50"></text></g><g><title>`0x7FF9F6BB9099 (1 samples, 0.01%)</title><rect x="99.7882%" y="453" width="0.0132%" height="15" fill="rgb(235,68,52)" fg:x="7539" fg:w="1"/><text x="100.0382%" y="463.50"></text></g><g><title>`0x7FF9F6C26891 (1 samples, 0.01%)</title><rect x="99.7882%" y="437" width="0.0132%" height="15" fill="rgb(246,142,3)" fg:x="7539" fg:w="1"/><text x="100.0382%" y="447.50"></text></g><g><title>`0x7FF9F6C4CC1B (1 samples, 0.01%)</title><rect x="99.8015%" y="485" width="0.0132%" height="15" fill="rgb(241,25,7)" fg:x="7540" fg:w="1"/><text x="100.0515%" y="495.50"></text></g><g><title>`0x7FF9F6C2636B (1 samples, 0.01%)</title><rect x="99.8015%" y="469" width="0.0132%" height="15" fill="rgb(242,119,39)" fg:x="7540" fg:w="1"/><text x="100.0515%" y="479.50"></text></g><g><title>`0x7FF9F6C26F3F (1 samples, 0.01%)</title><rect x="99.8015%" y="453" width="0.0132%" height="15" fill="rgb(241,98,45)" fg:x="7540" fg:w="1"/><text x="100.0515%" y="463.50"></text></g><g><title>`0x7FF9F6C27106 (1 samples, 0.01%)</title><rect x="99.8015%" y="437" width="0.0132%" height="15" fill="rgb(254,28,30)" fg:x="7540" fg:w="1"/><text x="100.0515%" y="447.50"></text></g><g><title>`0x7FF9F6C278B0 (1 samples, 0.01%)</title><rect x="99.8015%" y="421" width="0.0132%" height="15" fill="rgb(241,142,54)" fg:x="7540" fg:w="1"/><text x="100.0515%" y="431.50"></text></g><g><title>`0x7FF9F6C4CC66 (1 samples, 0.01%)</title><rect x="99.8147%" y="485" width="0.0132%" height="15" fill="rgb(222,85,15)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="495.50"></text></g><g><title>`0x7FF9F6C3EBC3 (1 samples, 0.01%)</title><rect x="99.8147%" y="469" width="0.0132%" height="15" fill="rgb(210,85,47)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="479.50"></text></g><g><title>`0x7FF9F6C3F9A6 (1 samples, 0.01%)</title><rect x="99.8147%" y="453" width="0.0132%" height="15" fill="rgb(224,206,25)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="463.50"></text></g><g><title>`0x7FF9F6C41794 (1 samples, 0.01%)</title><rect x="99.8147%" y="437" width="0.0132%" height="15" fill="rgb(243,201,19)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="447.50"></text></g><g><title>`0x7FF9F6C42343 (1 samples, 0.01%)</title><rect x="99.8147%" y="421" width="0.0132%" height="15" fill="rgb(236,59,4)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="431.50"></text></g><g><title>`0x7FF9F6BC7776 (1 samples, 0.01%)</title><rect x="99.8147%" y="405" width="0.0132%" height="15" fill="rgb(254,179,45)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="415.50"></text></g><g><title>`0x7FF9F6BC78B4 (1 samples, 0.01%)</title><rect x="99.8147%" y="389" width="0.0132%" height="15" fill="rgb(226,14,10)" fg:x="7541" fg:w="1"/><text x="100.0647%" y="399.50"></text></g><g><title>`0x7FF9F6C4D866 (1 samples, 0.01%)</title><rect x="99.8279%" y="485" width="0.0132%" height="15" fill="rgb(244,27,41)" fg:x="7542" fg:w="1"/><text x="100.0779%" y="495.50"></text></g><g><title>`0x7FF9F6C97721 (1 samples, 0.01%)</title><rect x="99.8279%" y="469" width="0.0132%" height="15" fill="rgb(235,35,32)" fg:x="7542" fg:w="1"/><text x="100.0779%" y="479.50"></text></g><g><title>`0x7FF9F6CFF8C4 (1 samples, 0.01%)</title><rect x="99.8279%" y="453" width="0.0132%" height="15" fill="rgb(218,68,31)" fg:x="7542" fg:w="1"/><text x="100.0779%" y="463.50"></text></g><g><title>`0x7FF9F6BEC5FE (1 samples, 0.01%)</title><rect x="99.8412%" y="357" width="0.0132%" height="15" fill="rgb(207,120,37)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="367.50"></text></g><g><title>`0x7FF9F6BEE3BC (1 samples, 0.01%)</title><rect x="99.8412%" y="341" width="0.0132%" height="15" fill="rgb(227,98,0)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="351.50"></text></g><g><title>`0x7FF9F6BA70E1 (1 samples, 0.01%)</title><rect x="99.8412%" y="325" width="0.0132%" height="15" fill="rgb(207,7,3)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="335.50"></text></g><g><title>`0x7FF9F6BA884E (1 samples, 0.01%)</title><rect x="99.8412%" y="309" width="0.0132%" height="15" fill="rgb(206,98,19)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="319.50"></text></g><g><title>`0x7FF9F6BA8D1A (1 samples, 0.01%)</title><rect x="99.8412%" y="293" width="0.0132%" height="15" fill="rgb(217,5,26)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="303.50"></text></g><g><title>`0x7FF9F6CFFC24 (1 samples, 0.01%)</title><rect x="99.8412%" y="277" width="0.0132%" height="15" fill="rgb(235,190,38)" fg:x="7543" fg:w="1"/><text x="100.0912%" y="287.50"></text></g><g><title>`0x7FF9F6BEB032 (2 samples, 0.03%)</title><rect x="99.8412%" y="421" width="0.0265%" height="15" fill="rgb(247,86,24)" fg:x="7543" fg:w="2"/><text x="100.0912%" y="431.50"></text></g><g><title>`0x7FF9F6BC69A4 (2 samples, 0.03%)</title><rect x="99.8412%" y="405" width="0.0265%" height="15" fill="rgb(205,101,16)" fg:x="7543" fg:w="2"/><text x="100.0912%" y="415.50"></text></g><g><title>`0x7FF9F6BA70E1 (2 samples, 0.03%)</title><rect x="99.8412%" y="389" width="0.0265%" height="15" fill="rgb(246,168,33)" fg:x="7543" fg:w="2"/><text x="100.0912%" y="399.50"></text></g><g><title>`0x7FF9F6BA8999 (2 samples, 0.03%)</title><rect x="99.8412%" y="373" width="0.0265%" height="15" fill="rgb(231,114,1)" fg:x="7543" fg:w="2"/><text x="100.0912%" y="383.50"></text></g><g><title>`0x7FF9F6BEC772 (1 samples, 0.01%)</title><rect x="99.8544%" y="357" width="0.0132%" height="15" fill="rgb(207,184,53)" fg:x="7544" fg:w="1"/><text x="100.1044%" y="367.50"></text></g><g><title>`0x7FF9F6BF4568 (1 samples, 0.01%)</title><rect x="99.8544%" y="341" width="0.0132%" height="15" fill="rgb(224,95,51)" fg:x="7544" fg:w="1"/><text x="100.1044%" y="351.50"></text></g><g><title>`0x7FF9F6BEB05A (1 samples, 0.01%)</title><rect x="99.8676%" y="421" width="0.0132%" height="15" fill="rgb(212,188,45)" fg:x="7545" fg:w="1"/><text x="100.1176%" y="431.50"></text></g><g><title>`0x7FF9F6BA41D7 (1 samples, 0.01%)</title><rect x="99.8676%" y="405" width="0.0132%" height="15" fill="rgb(223,154,38)" fg:x="7545" fg:w="1"/><text x="100.1176%" y="415.50"></text></g><g><title>`0x7FF9F6BA4351 (1 samples, 0.01%)</title><rect x="99.8676%" y="389" width="0.0132%" height="15" fill="rgb(251,22,52)" fg:x="7545" fg:w="1"/><text x="100.1176%" y="399.50"></text></g><g><title>`0x7FF9F6BF458C (1 samples, 0.01%)</title><rect x="99.8676%" y="373" width="0.0132%" height="15" fill="rgb(229,209,22)" fg:x="7545" fg:w="1"/><text x="100.1176%" y="383.50"></text></g><g><title>`0x7FF9F6C4B09A (1 samples, 0.01%)</title><rect x="99.8809%" y="389" width="0.0132%" height="15" fill="rgb(234,138,34)" fg:x="7546" fg:w="1"/><text x="100.1309%" y="399.50"></text></g><g><title>`0x7FF9F6BBCC0C (1 samples, 0.01%)</title><rect x="99.8809%" y="373" width="0.0132%" height="15" fill="rgb(212,95,11)" fg:x="7546" fg:w="1"/><text x="100.1309%" y="383.50"></text></g><g><title>`0x7FF9F6BBD860 (1 samples, 0.01%)</title><rect x="99.8809%" y="357" width="0.0132%" height="15" fill="rgb(240,179,47)" fg:x="7546" fg:w="1"/><text x="100.1309%" y="367.50"></text></g><g><title>`0x7FF9F5A4E120 (1 samples, 0.01%)</title><rect x="99.8809%" y="341" width="0.0132%" height="15" fill="rgb(240,163,11)" fg:x="7546" fg:w="1"/><text x="100.1309%" y="351.50"></text></g><g><title>`0x7FF9F45585BD (1 samples, 0.01%)</title><rect x="99.8941%" y="309" width="0.0132%" height="15" fill="rgb(236,37,12)" fg:x="7547" fg:w="1"/><text x="100.1441%" y="319.50"></text></g><g><title>`0x7FF9F4616B4F (1 samples, 0.01%)</title><rect x="99.8941%" y="293" width="0.0132%" height="15" fill="rgb(232,164,16)" fg:x="7547" fg:w="1"/><text x="100.1441%" y="303.50"></text></g><g><title>`0x7FF9F6C8E3CC (1 samples, 0.01%)</title><rect x="99.8941%" y="277" width="0.0132%" height="15" fill="rgb(244,205,15)" fg:x="7547" fg:w="1"/><text x="100.1441%" y="287.50"></text></g><g><title>`0x7FF9F6C8E502 (1 samples, 0.01%)</title><rect x="99.8941%" y="261" width="0.0132%" height="15" fill="rgb(223,117,47)" fg:x="7547" fg:w="1"/><text x="100.1441%" y="271.50"></text></g><g><title>`0x7FF9F6D031D4 (1 samples, 0.01%)</title><rect x="99.8941%" y="245" width="0.0132%" height="15" fill="rgb(244,107,35)" fg:x="7547" fg:w="1"/><text x="100.1441%" y="255.50"></text></g><g><title>`0x7FF9F4636DAD (2 samples, 0.03%)</title><rect x="99.8941%" y="325" width="0.0265%" height="15" fill="rgb(205,140,8)" fg:x="7547" fg:w="2"/><text x="100.1441%" y="335.50"></text></g><g><title>`0x7FF9F455893E (1 samples, 0.01%)</title><rect x="99.9073%" y="309" width="0.0132%" height="15" fill="rgb(228,84,46)" fg:x="7548" fg:w="1"/><text x="100.1573%" y="319.50"></text></g><g><title>`0x7FF9F45570C8 (1 samples, 0.01%)</title><rect x="99.9073%" y="293" width="0.0132%" height="15" fill="rgb(254,188,9)" fg:x="7548" fg:w="1"/><text x="100.1573%" y="303.50"></text></g><g><title>`0x7FF9F4556841 (1 samples, 0.01%)</title><rect x="99.9073%" y="277" width="0.0132%" height="15" fill="rgb(206,112,54)" fg:x="7548" fg:w="1"/><text x="100.1573%" y="287.50"></text></g><g><title>`0x7FF9F45564BE (1 samples, 0.01%)</title><rect x="99.9073%" y="261" width="0.0132%" height="15" fill="rgb(216,84,49)" fg:x="7548" fg:w="1"/><text x="100.1573%" y="271.50"></text></g><g><title>`0x7FF9F6D01754 (1 samples, 0.01%)</title><rect x="99.9073%" y="245" width="0.0132%" height="15" fill="rgb(214,194,35)" fg:x="7548" fg:w="1"/><text x="100.1573%" y="255.50"></text></g><g><title>`0x7FF9F6C6F680 (7 samples, 0.09%)</title><rect x="99.8412%" y="469" width="0.0927%" height="15" fill="rgb(249,28,3)" fg:x="7543" fg:w="7"/><text x="100.0912%" y="479.50"></text></g><g><title>`0x7FF9F6BF66A0 (7 samples, 0.09%)</title><rect x="99.8412%" y="453" width="0.0927%" height="15" fill="rgb(222,56,52)" fg:x="7543" fg:w="7"/><text x="100.0912%" y="463.50"></text></g><g><title>`0x7FF9F6BEACD0 (7 samples, 0.09%)</title><rect x="99.8412%" y="437" width="0.0927%" height="15" fill="rgb(245,217,50)" fg:x="7543" fg:w="7"/><text x="100.0912%" y="447.50"></text></g><g><title>`0x7FF9F6BEB0C4 (4 samples, 0.05%)</title><rect x="99.8809%" y="421" width="0.0529%" height="15" fill="rgb(213,201,24)" fg:x="7546" fg:w="4"/><text x="100.1309%" y="431.50"></text></g><g><title>`0x7FF9F6C4AD83 (4 samples, 0.05%)</title><rect x="99.8809%" y="405" width="0.0529%" height="15" fill="rgb(248,116,28)" fg:x="7546" fg:w="4"/><text x="100.1309%" y="415.50"></text></g><g><title>`0x7FF9F6C4B0C6 (3 samples, 0.04%)</title><rect x="99.8941%" y="389" width="0.0397%" height="15" fill="rgb(219,72,43)" fg:x="7547" fg:w="3"/><text x="100.1441%" y="399.50"></text></g><g><title>`0x7FF9F6C4B09A (3 samples, 0.04%)</title><rect x="99.8941%" y="373" width="0.0397%" height="15" fill="rgb(209,138,14)" fg:x="7547" fg:w="3"/><text x="100.1441%" y="383.50"></text></g><g><title>`0x7FF9F6BBCC0C (3 samples, 0.04%)</title><rect x="99.8941%" y="357" width="0.0397%" height="15" fill="rgb(222,18,33)" fg:x="7547" fg:w="3"/><text x="100.1441%" y="367.50"></text></g><g><title>`0x7FF9F6BBD860 (3 samples, 0.04%)</title><rect x="99.8941%" y="341" width="0.0397%" height="15" fill="rgb(213,199,7)" fg:x="7547" fg:w="3"/><text x="100.1441%" y="351.50"></text></g><g><title>`0x7FF9F4636E11 (1 samples, 0.01%)</title><rect x="99.9206%" y="325" width="0.0132%" height="15" fill="rgb(250,110,10)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="335.50"></text></g><g><title>`0x7FF9F45F18BE (1 samples, 0.01%)</title><rect x="99.9206%" y="309" width="0.0132%" height="15" fill="rgb(248,123,6)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="319.50"></text></g><g><title>`0x7FF9F45F21AF (1 samples, 0.01%)</title><rect x="99.9206%" y="293" width="0.0132%" height="15" fill="rgb(206,91,31)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="303.50"></text></g><g><title>`0x7FF9F4624F22 (1 samples, 0.01%)</title><rect x="99.9206%" y="277" width="0.0132%" height="15" fill="rgb(211,154,13)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="287.50"></text></g><g><title>`0x7FF9F458F96B (1 samples, 0.01%)</title><rect x="99.9206%" y="261" width="0.0132%" height="15" fill="rgb(225,148,7)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="271.50"></text></g><g><title>`0x7FF9F458FA3B (1 samples, 0.01%)</title><rect x="99.9206%" y="245" width="0.0132%" height="15" fill="rgb(220,160,43)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="255.50"></text></g><g><title>`0x7FF9F4590FF0 (1 samples, 0.01%)</title><rect x="99.9206%" y="229" width="0.0132%" height="15" fill="rgb(213,52,39)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="239.50"></text></g><g><title>`0x7FF9F45B54AC (1 samples, 0.01%)</title><rect x="99.9206%" y="213" width="0.0132%" height="15" fill="rgb(243,137,7)" fg:x="7549" fg:w="1"/><text x="100.1706%" y="223.50"></text></g><g><title>`0x7FF9F6C4D9C5 (8 samples, 0.11%)</title><rect x="99.8412%" y="485" width="0.1059%" height="15" fill="rgb(230,79,13)" fg:x="7543" fg:w="8"/><text x="100.0912%" y="495.50"></text></g><g><title>`0x7FF9F6C6F6F5 (1 samples, 0.01%)</title><rect x="99.9338%" y="469" width="0.0132%" height="15" fill="rgb(247,105,23)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="479.50"></text></g><g><title>`0x7FF9F6BAA118 (1 samples, 0.01%)</title><rect x="99.9338%" y="453" width="0.0132%" height="15" fill="rgb(223,179,41)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="463.50"></text></g><g><title>`0x7FF9F6BAAA7B (1 samples, 0.01%)</title><rect x="99.9338%" y="437" width="0.0132%" height="15" fill="rgb(218,9,34)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="447.50"></text></g><g><title>`0x7FF9F6BAAB90 (1 samples, 0.01%)</title><rect x="99.9338%" y="421" width="0.0132%" height="15" fill="rgb(222,106,8)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="431.50"></text></g><g><title>`0x7FF9F6BACDAB (1 samples, 0.01%)</title><rect x="99.9338%" y="405" width="0.0132%" height="15" fill="rgb(211,220,0)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="415.50"></text></g><g><title>`0x7FF9F6BAD16E (1 samples, 0.01%)</title><rect x="99.9338%" y="389" width="0.0132%" height="15" fill="rgb(229,52,16)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="399.50"></text></g><g><title>`0x7FF9F6D00124 (1 samples, 0.01%)</title><rect x="99.9338%" y="373" width="0.0132%" height="15" fill="rgb(212,155,18)" fg:x="7550" fg:w="1"/><text x="100.1838%" y="383.50"></text></g><g><title>`0x7FF9F6BEE3BC (1 samples, 0.01%)</title><rect x="99.9471%" y="453" width="0.0132%" height="15" fill="rgb(242,21,14)" fg:x="7551" fg:w="1"/><text x="100.1971%" y="463.50"></text></g><g><title>`0x7FF9F6BA70E1 (1 samples, 0.01%)</title><rect x="99.9471%" y="437" width="0.0132%" height="15" fill="rgb(222,19,48)" fg:x="7551" fg:w="1"/><text x="100.1971%" y="447.50"></text></g><g><title>`0x7FF9F6BA8999 (1 samples, 0.01%)</title><rect x="99.9471%" y="421" width="0.0132%" height="15" fill="rgb(232,45,27)" fg:x="7551" fg:w="1"/><text x="100.1971%" y="431.50"></text></g><g><title>`0x7FF9F6BEC5FE (1 samples, 0.01%)</title><rect x="99.9471%" y="405" width="0.0132%" height="15" fill="rgb(249,103,42)" fg:x="7551" fg:w="1"/><text x="100.1971%" y="415.50"></text></g><g><title>`0x7FF9F6BEEC56 (1 samples, 0.01%)</title><rect x="99.9471%" y="389" width="0.0132%" height="15" fill="rgb(246,81,33)" fg:x="7551" fg:w="1"/><text x="100.1971%" y="399.50"></text></g><g><title>`0x7FF9F6C4DAB9 (2 samples, 0.03%)</title><rect x="99.9471%" y="485" width="0.0265%" height="15" fill="rgb(252,33,42)" fg:x="7551" fg:w="2"/><text x="100.1971%" y="495.50"></text></g><g><title>`0x7FF9F6BEC5FE (2 samples, 0.03%)</title><rect x="99.9471%" y="469" width="0.0265%" height="15" fill="rgb(209,212,41)" fg:x="7551" fg:w="2"/><text x="100.1971%" y="479.50"></text></g><g><title>`0x7FF9F6BEE455 (1 samples, 0.01%)</title><rect x="99.9603%" y="453" width="0.0132%" height="15" fill="rgb(207,154,6)" fg:x="7552" fg:w="1"/><text x="100.2103%" y="463.50"></text></g><g><title>`0x7FF9F6C22D4E (1 samples, 0.01%)</title><rect x="99.9603%" y="437" width="0.0132%" height="15" fill="rgb(223,64,47)" fg:x="7552" fg:w="1"/><text x="100.2103%" y="447.50"></text></g><g><title>`0x7FF9F6C00E43 (1 samples, 0.01%)</title><rect x="99.9603%" y="421" width="0.0132%" height="15" fill="rgb(211,161,38)" fg:x="7552" fg:w="1"/><text x="100.2103%" y="431.50"></text></g><g><title>`0x7FF9F6D026D4 (1 samples, 0.01%)</title><rect x="99.9603%" y="405" width="0.0132%" height="15" fill="rgb(219,138,40)" fg:x="7552" fg:w="1"/><text x="100.2103%" y="415.50"></text></g><g><title>`0x7FF9F6C4BDC0 (15 samples, 0.20%)</title><rect x="99.7882%" y="501" width="0.1985%" height="15" fill="rgb(241,228,46)" fg:x="7539" fg:w="15"/><text x="100.0382%" y="511.50"></text></g><g><title>`0x7FF9F6C4DBC9 (1 samples, 0.01%)</title><rect x="99.9735%" y="485" width="0.0132%" height="15" fill="rgb(223,209,38)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="495.50"></text></g><g><title>`0x7FF9F6C4B0C6 (1 samples, 0.01%)</title><rect x="99.9735%" y="469" width="0.0132%" height="15" fill="rgb(236,164,45)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="479.50"></text></g><g><title>`0x7FF9F6C4B0C6 (1 samples, 0.01%)</title><rect x="99.9735%" y="453" width="0.0132%" height="15" fill="rgb(231,15,5)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="463.50"></text></g><g><title>`0x7FF9F6C4B09A (1 samples, 0.01%)</title><rect x="99.9735%" y="437" width="0.0132%" height="15" fill="rgb(252,35,15)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="447.50"></text></g><g><title>`0x7FF9F6BBCC0C (1 samples, 0.01%)</title><rect x="99.9735%" y="421" width="0.0132%" height="15" fill="rgb(248,181,18)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="431.50"></text></g><g><title>`0x7FF9F6BBD860 (1 samples, 0.01%)</title><rect x="99.9735%" y="405" width="0.0132%" height="15" fill="rgb(233,39,42)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="415.50"></text></g><g><title>`0x7FF9F4035056 (1 samples, 0.01%)</title><rect x="99.9735%" y="389" width="0.0132%" height="15" fill="rgb(238,110,33)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="399.50"></text></g><g><title>`0x7FF9F408C576 (1 samples, 0.01%)</title><rect x="99.9735%" y="373" width="0.0132%" height="15" fill="rgb(233,195,10)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="383.50"></text></g><g><title>`0x7FF9F4080B7A (1 samples, 0.01%)</title><rect x="99.9735%" y="357" width="0.0132%" height="15" fill="rgb(254,105,3)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="367.50"></text></g><g><title>`0x7FF9F4080D7C (1 samples, 0.01%)</title><rect x="99.9735%" y="341" width="0.0132%" height="15" fill="rgb(221,225,9)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="351.50"></text></g><g><title>`0x7FF9F4603C80 (1 samples, 0.01%)</title><rect x="99.9735%" y="325" width="0.0132%" height="15" fill="rgb(224,227,45)" fg:x="7553" fg:w="1"/><text x="100.2235%" y="335.50"></text></g><g><title>all (7,555 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="7555"/><text x="0.2500%" y="559.50"></text></g><g><title>`0x7FF9F6C9233E (18 samples, 0.24%)</title><rect x="99.7617%" y="533" width="0.2383%" height="15" fill="rgb(206,209,35)" fg:x="7537" fg:w="18"/><text x="100.0117%" y="543.50"></text></g><g><title>`0x7FF9F6CBEB13 (17 samples, 0.23%)</title><rect x="99.7750%" y="517" width="0.2250%" height="15" fill="rgb(245,195,53)" fg:x="7538" fg:w="17"/><text x="100.0250%" y="527.50"></text></g><g><title>`0x7FF9F6C4BEA6 (1 samples, 0.01%)</title><rect x="99.9868%" y="501" width="0.0132%" height="15" fill="rgb(240,92,26)" fg:x="7554" fg:w="1"/><text x="100.2368%" y="511.50"></text></g><g><title>`0x7FF9F6C4BA5E (1 samples, 0.01%)</title><rect x="99.9868%" y="485" width="0.0132%" height="15" fill="rgb(207,40,23)" fg:x="7554" fg:w="1"/><text x="100.2368%" y="495.50"></text></g><g><title>`0x7FF9F6CFF8E4 (1 samples, 0.01%)</title><rect x="99.9868%" y="469" width="0.0132%" height="15" fill="rgb(223,111,35)" fg:x="7554" fg:w="1"/><text x="100.2368%" y="479.50"></text></g></svg></svg>